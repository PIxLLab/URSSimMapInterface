// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.proto

package pb_wearable;

public final class Wearable {
  private Wearable() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WearableRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
     */
    pb_wearable.Wearable.WearableRequest.WearableRequestType getType();

    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
     */
    boolean hasSetPoseRepeated();
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
     */
    pb_wearable.Wearable.WearableRequest.SetPoseRepeated getSetPoseRepeated();
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
     */
    pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder getSetPoseRepeatedOrBuilder();

    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
     */
    boolean hasSetPoseWaypointRepeated();
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
     */
    pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated getSetPoseWaypointRepeated();
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
     */
    pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder getSetPoseWaypointRepeatedOrBuilder();

    /**
     * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
     *
     * <pre>
     * Infrequent requests should come last
     * </pre>
     */
    boolean hasGetPoseRepeated();
    /**
     * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
     *
     * <pre>
     * Infrequent requests should come last
     * </pre>
     */
    pb_wearable.Wearable.WearableRequest.GetPoseRepeated getGetPoseRepeated();
    /**
     * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
     *
     * <pre>
     * Infrequent requests should come last
     * </pre>
     */
    pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder getGetPoseRepeatedOrBuilder();
  }
  /**
   * Protobuf type {@code pb_wearable.WearableRequest}
   *
   * <pre>
   * *****************************************
   * </pre>
   */
  public static final class WearableRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest)
      WearableRequestOrBuilder {
    // Use WearableRequest.newBuilder() to construct.
    private WearableRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WearableRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WearableRequest defaultInstance;
    public static WearableRequest getDefaultInstance() {
      return defaultInstance;
    }

    public WearableRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WearableRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              pb_wearable.Wearable.WearableRequest.WearableRequestType value = pb_wearable.Wearable.WearableRequest.WearableRequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder subBuilder = null;
              if (oneofWearablerequestCase_ == 2) {
                subBuilder = ((pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_).toBuilder();
              }
              oneofWearablerequest_ = input.readMessage(pb_wearable.Wearable.WearableRequest.SetPoseRepeated.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_);
                oneofWearablerequest_ = subBuilder.buildPartial();
              }
              oneofWearablerequestCase_ = 2;
              break;
            }
            case 26: {
              pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder subBuilder = null;
              if (oneofWearablerequestCase_ == 3) {
                subBuilder = ((pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_).toBuilder();
              }
              oneofWearablerequest_ = input.readMessage(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_);
                oneofWearablerequest_ = subBuilder.buildPartial();
              }
              oneofWearablerequestCase_ = 3;
              break;
            }
            case 34: {
              pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder subBuilder = null;
              if (oneofWearablerequestCase_ == 4) {
                subBuilder = ((pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_).toBuilder();
              }
              oneofWearablerequest_ = input.readMessage(pb_wearable.Wearable.WearableRequest.GetPoseRepeated.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_);
                oneofWearablerequest_ = subBuilder.buildPartial();
              }
              oneofWearablerequestCase_ = 4;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb_wearable.Wearable.WearableRequest.class, pb_wearable.Wearable.WearableRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<WearableRequest> PARSER =
        new com.google.protobuf.AbstractParser<WearableRequest>() {
      public WearableRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WearableRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WearableRequest> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code pb_wearable.WearableRequest.WearableRequestType}
     */
    public enum WearableRequestType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GET_REGION = 0;</code>
       */
      GET_REGION(0, 0),
      /**
       * <code>GET_POSE_REPEATED = 1;</code>
       */
      GET_POSE_REPEATED(1, 1),
      /**
       * <code>SET_POSE_REPEATED = 2;</code>
       */
      SET_POSE_REPEATED(2, 2),
      /**
       * <code>SET_POSE_WAYPOINT_REPEATED = 3;</code>
       */
      SET_POSE_WAYPOINT_REPEATED(3, 3),
      ;

      /**
       * <code>GET_REGION = 0;</code>
       */
      public static final int GET_REGION_VALUE = 0;
      /**
       * <code>GET_POSE_REPEATED = 1;</code>
       */
      public static final int GET_POSE_REPEATED_VALUE = 1;
      /**
       * <code>SET_POSE_REPEATED = 2;</code>
       */
      public static final int SET_POSE_REPEATED_VALUE = 2;
      /**
       * <code>SET_POSE_WAYPOINT_REPEATED = 3;</code>
       */
      public static final int SET_POSE_WAYPOINT_REPEATED_VALUE = 3;


      public final int getNumber() { return value; }

      public static WearableRequestType valueOf(int value) {
        switch (value) {
          case 0: return GET_REGION;
          case 1: return GET_POSE_REPEATED;
          case 2: return SET_POSE_REPEATED;
          case 3: return SET_POSE_WAYPOINT_REPEATED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WearableRequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<WearableRequestType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WearableRequestType>() {
              public WearableRequestType findValueByNumber(int number) {
                return WearableRequestType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return pb_wearable.Wearable.WearableRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final WearableRequestType[] VALUES = values();

      public static WearableRequestType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private WearableRequestType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:pb_wearable.WearableRequest.WearableRequestType)
    }

    public interface GetPoseRepeatedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest.GetPoseRepeated)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      java.util.List<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose> 
          getGetPoseList();
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose getGetPose(int index);
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      int getGetPoseCount();
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      java.util.List<? extends pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder> 
          getGetPoseOrBuilderList();
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder getGetPoseOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code pb_wearable.WearableRequest.GetPoseRepeated}
     */
    public static final class GetPoseRepeated extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest.GetPoseRepeated)
        GetPoseRepeatedOrBuilder {
      // Use GetPoseRepeated.newBuilder() to construct.
      private GetPoseRepeated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private GetPoseRepeated(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final GetPoseRepeated defaultInstance;
      public static GetPoseRepeated getDefaultInstance() {
        return defaultInstance;
      }

      public GetPoseRepeated getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private GetPoseRepeated(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  getPose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose>();
                  mutable_bitField0_ |= 0x00000001;
                }
                getPose_.add(input.readMessage(pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            getPose_ = java.util.Collections.unmodifiableList(getPose_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableRequest.GetPoseRepeated.class, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder.class);
      }

      public static com.google.protobuf.Parser<GetPoseRepeated> PARSER =
          new com.google.protobuf.AbstractParser<GetPoseRepeated>() {
        public GetPoseRepeated parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetPoseRepeated(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<GetPoseRepeated> getParserForType() {
        return PARSER;
      }

      public interface GetPoseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest.GetPoseRepeated.GetPose)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required int32 uav_id = 1;</code>
         */
        boolean hasUavId();
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        int getUavId();
      }
      /**
       * Protobuf type {@code pb_wearable.WearableRequest.GetPoseRepeated.GetPose}
       */
      public static final class GetPose extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest.GetPoseRepeated.GetPose)
          GetPoseOrBuilder {
        // Use GetPose.newBuilder() to construct.
        private GetPose(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private GetPose(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final GetPose defaultInstance;
        public static GetPose getDefaultInstance() {
          return defaultInstance;
        }

        public GetPose getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private GetPose(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  uavId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.class, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder.class);
        }

        public static com.google.protobuf.Parser<GetPose> PARSER =
            new com.google.protobuf.AbstractParser<GetPose>() {
          public GetPose parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new GetPose(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<GetPose> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int UAV_ID_FIELD_NUMBER = 1;
        private int uavId_;
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public boolean hasUavId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public int getUavId() {
          return uavId_;
        }

        private void initFields() {
          uavId_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          if (!hasUavId()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(1, uavId_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, uavId_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code pb_wearable.WearableRequest.GetPoseRepeated.GetPose}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest.GetPoseRepeated.GetPose)
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.class, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder.class);
          }

          // Construct using pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            uavId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_descriptor;
          }

          public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose getDefaultInstanceForType() {
            return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.getDefaultInstance();
          }

          public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose build() {
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose buildPartial() {
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose result = new pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.uavId_ = uavId_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose) {
              return mergeFrom((pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose other) {
            if (other == pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.getDefaultInstance()) return this;
            if (other.hasUavId()) {
              setUavId(other.getUavId());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasUavId()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int uavId_ ;
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public boolean hasUavId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public int getUavId() {
            return uavId_;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder setUavId(int value) {
            bitField0_ |= 0x00000001;
            uavId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder clearUavId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            uavId_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest.GetPoseRepeated.GetPose)
        }

        static {
          defaultInstance = new GetPose(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest.GetPoseRepeated.GetPose)
      }

      public static final int GET_POSE_FIELD_NUMBER = 1;
      private java.util.List<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose> getPose_;
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public java.util.List<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose> getGetPoseList() {
        return getPose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public java.util.List<? extends pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder> 
          getGetPoseOrBuilderList() {
        return getPose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public int getGetPoseCount() {
        return getPose_.size();
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose getGetPose(int index) {
        return getPose_.get(index);
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder getGetPoseOrBuilder(
          int index) {
        return getPose_.get(index);
      }

      private void initFields() {
        getPose_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getGetPoseCount(); i++) {
          if (!getGetPose(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < getPose_.size(); i++) {
          output.writeMessage(1, getPose_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < getPose_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPose_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.GetPoseRepeated parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pb_wearable.Wearable.WearableRequest.GetPoseRepeated prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pb_wearable.WearableRequest.GetPoseRepeated}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest.GetPoseRepeated)
          pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableRequest.GetPoseRepeated.class, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder.class);
        }

        // Construct using pb_wearable.Wearable.WearableRequest.GetPoseRepeated.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getGetPoseFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (getPoseBuilder_ == null) {
            getPose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            getPoseBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor;
        }

        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated getDefaultInstanceForType() {
          return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
        }

        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated build() {
          pb_wearable.Wearable.WearableRequest.GetPoseRepeated result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated buildPartial() {
          pb_wearable.Wearable.WearableRequest.GetPoseRepeated result = new pb_wearable.Wearable.WearableRequest.GetPoseRepeated(this);
          int from_bitField0_ = bitField0_;
          if (getPoseBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              getPose_ = java.util.Collections.unmodifiableList(getPose_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.getPose_ = getPose_;
          } else {
            result.getPose_ = getPoseBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pb_wearable.Wearable.WearableRequest.GetPoseRepeated) {
            return mergeFrom((pb_wearable.Wearable.WearableRequest.GetPoseRepeated)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pb_wearable.Wearable.WearableRequest.GetPoseRepeated other) {
          if (other == pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance()) return this;
          if (getPoseBuilder_ == null) {
            if (!other.getPose_.isEmpty()) {
              if (getPose_.isEmpty()) {
                getPose_ = other.getPose_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureGetPoseIsMutable();
                getPose_.addAll(other.getPose_);
              }
              onChanged();
            }
          } else {
            if (!other.getPose_.isEmpty()) {
              if (getPoseBuilder_.isEmpty()) {
                getPoseBuilder_.dispose();
                getPoseBuilder_ = null;
                getPose_ = other.getPose_;
                bitField0_ = (bitField0_ & ~0x00000001);
                getPoseBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getGetPoseFieldBuilder() : null;
              } else {
                getPoseBuilder_.addAllMessages(other.getPose_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getGetPoseCount(); i++) {
            if (!getGetPose(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pb_wearable.Wearable.WearableRequest.GetPoseRepeated parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose> getPose_ =
          java.util.Collections.emptyList();
        private void ensureGetPoseIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            getPose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose>(getPose_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder> getPoseBuilder_;

        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public java.util.List<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose> getGetPoseList() {
          if (getPoseBuilder_ == null) {
            return java.util.Collections.unmodifiableList(getPose_);
          } else {
            return getPoseBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public int getGetPoseCount() {
          if (getPoseBuilder_ == null) {
            return getPose_.size();
          } else {
            return getPoseBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose getGetPose(int index) {
          if (getPoseBuilder_ == null) {
            return getPose_.get(index);
          } else {
            return getPoseBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder setGetPose(
            int index, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose value) {
          if (getPoseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGetPoseIsMutable();
            getPose_.set(index, value);
            onChanged();
          } else {
            getPoseBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder setGetPose(
            int index, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder builderForValue) {
          if (getPoseBuilder_ == null) {
            ensureGetPoseIsMutable();
            getPose_.set(index, builderForValue.build());
            onChanged();
          } else {
            getPoseBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addGetPose(pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose value) {
          if (getPoseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGetPoseIsMutable();
            getPose_.add(value);
            onChanged();
          } else {
            getPoseBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addGetPose(
            int index, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose value) {
          if (getPoseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGetPoseIsMutable();
            getPose_.add(index, value);
            onChanged();
          } else {
            getPoseBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addGetPose(
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder builderForValue) {
          if (getPoseBuilder_ == null) {
            ensureGetPoseIsMutable();
            getPose_.add(builderForValue.build());
            onChanged();
          } else {
            getPoseBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addGetPose(
            int index, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder builderForValue) {
          if (getPoseBuilder_ == null) {
            ensureGetPoseIsMutable();
            getPose_.add(index, builderForValue.build());
            onChanged();
          } else {
            getPoseBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addAllGetPose(
            java.lang.Iterable<? extends pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose> values) {
          if (getPoseBuilder_ == null) {
            ensureGetPoseIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, getPose_);
            onChanged();
          } else {
            getPoseBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder clearGetPose() {
          if (getPoseBuilder_ == null) {
            getPose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            getPoseBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder removeGetPose(int index) {
          if (getPoseBuilder_ == null) {
            ensureGetPoseIsMutable();
            getPose_.remove(index);
            onChanged();
          } else {
            getPoseBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder getGetPoseBuilder(
            int index) {
          return getGetPoseFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder getGetPoseOrBuilder(
            int index) {
          if (getPoseBuilder_ == null) {
            return getPose_.get(index);  } else {
            return getPoseBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public java.util.List<? extends pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder> 
             getGetPoseOrBuilderList() {
          if (getPoseBuilder_ != null) {
            return getPoseBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(getPose_);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder addGetPoseBuilder() {
          return getGetPoseFieldBuilder().addBuilder(
              pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder addGetPoseBuilder(
            int index) {
          return getGetPoseFieldBuilder().addBuilder(
              index, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.GetPoseRepeated.GetPose get_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public java.util.List<pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder> 
             getGetPoseBuilderList() {
          return getGetPoseFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder> 
            getGetPoseFieldBuilder() {
          if (getPoseBuilder_ == null) {
            getPoseBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPose.Builder, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.GetPoseOrBuilder>(
                    getPose_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            getPose_ = null;
          }
          return getPoseBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest.GetPoseRepeated)
      }

      static {
        defaultInstance = new GetPoseRepeated(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest.GetPoseRepeated)
    }

    public interface SetPoseRepeatedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest.SetPoseRepeated)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose> 
          getSetPoseList();
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose getSetPose(int index);
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      int getSetPoseCount();
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      java.util.List<? extends pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder> 
          getSetPoseOrBuilderList();
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder getSetPoseOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code pb_wearable.WearableRequest.SetPoseRepeated}
     */
    public static final class SetPoseRepeated extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest.SetPoseRepeated)
        SetPoseRepeatedOrBuilder {
      // Use SetPoseRepeated.newBuilder() to construct.
      private SetPoseRepeated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SetPoseRepeated(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SetPoseRepeated defaultInstance;
      public static SetPoseRepeated getDefaultInstance() {
        return defaultInstance;
      }

      public SetPoseRepeated getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SetPoseRepeated(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  setPose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose>();
                  mutable_bitField0_ |= 0x00000001;
                }
                setPose_.add(input.readMessage(pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            setPose_ = java.util.Collections.unmodifiableList(setPose_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableRequest.SetPoseRepeated.class, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder.class);
      }

      public static com.google.protobuf.Parser<SetPoseRepeated> PARSER =
          new com.google.protobuf.AbstractParser<SetPoseRepeated>() {
        public SetPoseRepeated parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SetPoseRepeated(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SetPoseRepeated> getParserForType() {
        return PARSER;
      }

      public interface SetPoseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest.SetPoseRepeated.SetPose)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required int32 uav_id = 1;</code>
         */
        boolean hasUavId();
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        int getUavId();

        /**
         * <code>optional double x = 2;</code>
         */
        boolean hasX();
        /**
         * <code>optional double x = 2;</code>
         */
        double getX();

        /**
         * <code>optional double y = 3;</code>
         */
        boolean hasY();
        /**
         * <code>optional double y = 3;</code>
         */
        double getY();

        /**
         * <code>optional double z = 4;</code>
         */
        boolean hasZ();
        /**
         * <code>optional double z = 4;</code>
         */
        double getZ();

        /**
         * <code>optional double yaw = 5;</code>
         */
        boolean hasYaw();
        /**
         * <code>optional double yaw = 5;</code>
         */
        double getYaw();
      }
      /**
       * Protobuf type {@code pb_wearable.WearableRequest.SetPoseRepeated.SetPose}
       */
      public static final class SetPose extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest.SetPoseRepeated.SetPose)
          SetPoseOrBuilder {
        // Use SetPose.newBuilder() to construct.
        private SetPose(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private SetPose(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SetPose defaultInstance;
        public static SetPose getDefaultInstance() {
          return defaultInstance;
        }

        public SetPose getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private SetPose(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  uavId_ = input.readInt32();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  x_ = input.readDouble();
                  break;
                }
                case 25: {
                  bitField0_ |= 0x00000004;
                  y_ = input.readDouble();
                  break;
                }
                case 33: {
                  bitField0_ |= 0x00000008;
                  z_ = input.readDouble();
                  break;
                }
                case 41: {
                  bitField0_ |= 0x00000010;
                  yaw_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.class, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder.class);
        }

        public static com.google.protobuf.Parser<SetPose> PARSER =
            new com.google.protobuf.AbstractParser<SetPose>() {
          public SetPose parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SetPose(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<SetPose> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int UAV_ID_FIELD_NUMBER = 1;
        private int uavId_;
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public boolean hasUavId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public int getUavId() {
          return uavId_;
        }

        public static final int X_FIELD_NUMBER = 2;
        private double x_;
        /**
         * <code>optional double x = 2;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double x = 2;</code>
         */
        public double getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 3;
        private double y_;
        /**
         * <code>optional double y = 3;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double y = 3;</code>
         */
        public double getY() {
          return y_;
        }

        public static final int Z_FIELD_NUMBER = 4;
        private double z_;
        /**
         * <code>optional double z = 4;</code>
         */
        public boolean hasZ() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double z = 4;</code>
         */
        public double getZ() {
          return z_;
        }

        public static final int YAW_FIELD_NUMBER = 5;
        private double yaw_;
        /**
         * <code>optional double yaw = 5;</code>
         */
        public boolean hasYaw() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional double yaw = 5;</code>
         */
        public double getYaw() {
          return yaw_;
        }

        private void initFields() {
          uavId_ = 0;
          x_ = 0D;
          y_ = 0D;
          z_ = 0D;
          yaw_ = 0D;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          if (!hasUavId()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(1, uavId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeDouble(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeDouble(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeDouble(4, z_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeDouble(5, yaw_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, uavId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, z_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(5, yaw_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code pb_wearable.WearableRequest.SetPoseRepeated.SetPose}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest.SetPoseRepeated.SetPose)
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.class, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder.class);
          }

          // Construct using pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            uavId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000004);
            z_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000008);
            yaw_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_descriptor;
          }

          public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose getDefaultInstanceForType() {
            return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.getDefaultInstance();
          }

          public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose build() {
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose buildPartial() {
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose result = new pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.uavId_ = uavId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.y_ = y_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.z_ = z_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.yaw_ = yaw_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose) {
              return mergeFrom((pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose other) {
            if (other == pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.getDefaultInstance()) return this;
            if (other.hasUavId()) {
              setUavId(other.getUavId());
            }
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasZ()) {
              setZ(other.getZ());
            }
            if (other.hasYaw()) {
              setYaw(other.getYaw());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasUavId()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int uavId_ ;
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public boolean hasUavId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public int getUavId() {
            return uavId_;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder setUavId(int value) {
            bitField0_ |= 0x00000001;
            uavId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder clearUavId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            uavId_ = 0;
            onChanged();
            return this;
          }

          private double x_ ;
          /**
           * <code>optional double x = 2;</code>
           */
          public boolean hasX() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional double x = 2;</code>
           */
          public double getX() {
            return x_;
          }
          /**
           * <code>optional double x = 2;</code>
           */
          public Builder setX(double value) {
            bitField0_ |= 0x00000002;
            x_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double x = 2;</code>
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000002);
            x_ = 0D;
            onChanged();
            return this;
          }

          private double y_ ;
          /**
           * <code>optional double y = 3;</code>
           */
          public boolean hasY() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional double y = 3;</code>
           */
          public double getY() {
            return y_;
          }
          /**
           * <code>optional double y = 3;</code>
           */
          public Builder setY(double value) {
            bitField0_ |= 0x00000004;
            y_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double y = 3;</code>
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000004);
            y_ = 0D;
            onChanged();
            return this;
          }

          private double z_ ;
          /**
           * <code>optional double z = 4;</code>
           */
          public boolean hasZ() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional double z = 4;</code>
           */
          public double getZ() {
            return z_;
          }
          /**
           * <code>optional double z = 4;</code>
           */
          public Builder setZ(double value) {
            bitField0_ |= 0x00000008;
            z_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double z = 4;</code>
           */
          public Builder clearZ() {
            bitField0_ = (bitField0_ & ~0x00000008);
            z_ = 0D;
            onChanged();
            return this;
          }

          private double yaw_ ;
          /**
           * <code>optional double yaw = 5;</code>
           */
          public boolean hasYaw() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public double getYaw() {
            return yaw_;
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public Builder setYaw(double value) {
            bitField0_ |= 0x00000010;
            yaw_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public Builder clearYaw() {
            bitField0_ = (bitField0_ & ~0x00000010);
            yaw_ = 0D;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest.SetPoseRepeated.SetPose)
        }

        static {
          defaultInstance = new SetPose(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest.SetPoseRepeated.SetPose)
      }

      public static final int SET_POSE_FIELD_NUMBER = 1;
      private java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose> setPose_;
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose> getSetPoseList() {
        return setPose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public java.util.List<? extends pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder> 
          getSetPoseOrBuilderList() {
        return setPose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public int getSetPoseCount() {
        return setPose_.size();
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose getSetPose(int index) {
        return setPose_.get(index);
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
       *
       * <pre>
       * uav_id must be different in each instance
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder getSetPoseOrBuilder(
          int index) {
        return setPose_.get(index);
      }

      private void initFields() {
        setPose_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getSetPoseCount(); i++) {
          if (!getSetPose(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < setPose_.size(); i++) {
          output.writeMessage(1, setPose_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < setPose_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, setPose_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseRepeated parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pb_wearable.Wearable.WearableRequest.SetPoseRepeated prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pb_wearable.WearableRequest.SetPoseRepeated}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest.SetPoseRepeated)
          pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableRequest.SetPoseRepeated.class, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder.class);
        }

        // Construct using pb_wearable.Wearable.WearableRequest.SetPoseRepeated.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSetPoseFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (setPoseBuilder_ == null) {
            setPose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            setPoseBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor;
        }

        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated getDefaultInstanceForType() {
          return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
        }

        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated build() {
          pb_wearable.Wearable.WearableRequest.SetPoseRepeated result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated buildPartial() {
          pb_wearable.Wearable.WearableRequest.SetPoseRepeated result = new pb_wearable.Wearable.WearableRequest.SetPoseRepeated(this);
          int from_bitField0_ = bitField0_;
          if (setPoseBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              setPose_ = java.util.Collections.unmodifiableList(setPose_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.setPose_ = setPose_;
          } else {
            result.setPose_ = setPoseBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pb_wearable.Wearable.WearableRequest.SetPoseRepeated) {
            return mergeFrom((pb_wearable.Wearable.WearableRequest.SetPoseRepeated)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pb_wearable.Wearable.WearableRequest.SetPoseRepeated other) {
          if (other == pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance()) return this;
          if (setPoseBuilder_ == null) {
            if (!other.setPose_.isEmpty()) {
              if (setPose_.isEmpty()) {
                setPose_ = other.setPose_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSetPoseIsMutable();
                setPose_.addAll(other.setPose_);
              }
              onChanged();
            }
          } else {
            if (!other.setPose_.isEmpty()) {
              if (setPoseBuilder_.isEmpty()) {
                setPoseBuilder_.dispose();
                setPoseBuilder_ = null;
                setPose_ = other.setPose_;
                bitField0_ = (bitField0_ & ~0x00000001);
                setPoseBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getSetPoseFieldBuilder() : null;
              } else {
                setPoseBuilder_.addAllMessages(other.setPose_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getSetPoseCount(); i++) {
            if (!getSetPose(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pb_wearable.Wearable.WearableRequest.SetPoseRepeated parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose> setPose_ =
          java.util.Collections.emptyList();
        private void ensureSetPoseIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            setPose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose>(setPose_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder> setPoseBuilder_;

        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose> getSetPoseList() {
          if (setPoseBuilder_ == null) {
            return java.util.Collections.unmodifiableList(setPose_);
          } else {
            return setPoseBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public int getSetPoseCount() {
          if (setPoseBuilder_ == null) {
            return setPose_.size();
          } else {
            return setPoseBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose getSetPose(int index) {
          if (setPoseBuilder_ == null) {
            return setPose_.get(index);
          } else {
            return setPoseBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder setSetPose(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose value) {
          if (setPoseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSetPoseIsMutable();
            setPose_.set(index, value);
            onChanged();
          } else {
            setPoseBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder setSetPose(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder builderForValue) {
          if (setPoseBuilder_ == null) {
            ensureSetPoseIsMutable();
            setPose_.set(index, builderForValue.build());
            onChanged();
          } else {
            setPoseBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addSetPose(pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose value) {
          if (setPoseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSetPoseIsMutable();
            setPose_.add(value);
            onChanged();
          } else {
            setPoseBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addSetPose(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose value) {
          if (setPoseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSetPoseIsMutable();
            setPose_.add(index, value);
            onChanged();
          } else {
            setPoseBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addSetPose(
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder builderForValue) {
          if (setPoseBuilder_ == null) {
            ensureSetPoseIsMutable();
            setPose_.add(builderForValue.build());
            onChanged();
          } else {
            setPoseBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addSetPose(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder builderForValue) {
          if (setPoseBuilder_ == null) {
            ensureSetPoseIsMutable();
            setPose_.add(index, builderForValue.build());
            onChanged();
          } else {
            setPoseBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder addAllSetPose(
            java.lang.Iterable<? extends pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose> values) {
          if (setPoseBuilder_ == null) {
            ensureSetPoseIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, setPose_);
            onChanged();
          } else {
            setPoseBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder clearSetPose() {
          if (setPoseBuilder_ == null) {
            setPose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            setPoseBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public Builder removeSetPose(int index) {
          if (setPoseBuilder_ == null) {
            ensureSetPoseIsMutable();
            setPose_.remove(index);
            onChanged();
          } else {
            setPoseBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder getSetPoseBuilder(
            int index) {
          return getSetPoseFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder getSetPoseOrBuilder(
            int index) {
          if (setPoseBuilder_ == null) {
            return setPose_.get(index);  } else {
            return setPoseBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public java.util.List<? extends pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder> 
             getSetPoseOrBuilderList() {
          if (setPoseBuilder_ != null) {
            return setPoseBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(setPose_);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder addSetPoseBuilder() {
          return getSetPoseFieldBuilder().addBuilder(
              pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder addSetPoseBuilder(
            int index) {
          return getSetPoseFieldBuilder().addBuilder(
              index, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseRepeated.SetPose set_pose = 1;</code>
         *
         * <pre>
         * uav_id must be different in each instance
         * </pre>
         */
        public java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder> 
             getSetPoseBuilderList() {
          return getSetPoseFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder> 
            getSetPoseFieldBuilder() {
          if (setPoseBuilder_ == null) {
            setPoseBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPose.Builder, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.SetPoseOrBuilder>(
                    setPose_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            setPose_ = null;
          }
          return setPoseBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest.SetPoseRepeated)
      }

      static {
        defaultInstance = new SetPoseRepeated(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest.SetPoseRepeated)
    }

    public interface SetPoseWaypointRepeatedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest.SetPoseWaypointRepeated)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 uav_id = 1;</code>
       */
      boolean hasUavId();
      /**
       * <code>required int32 uav_id = 1;</code>
       */
      int getUavId();

      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint> 
          getSetPoseWaypointList();
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint getSetPoseWaypoint(int index);
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      int getSetPoseWaypointCount();
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      java.util.List<? extends pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder> 
          getSetPoseWaypointOrBuilderList();
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder getSetPoseWaypointOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code pb_wearable.WearableRequest.SetPoseWaypointRepeated}
     */
    public static final class SetPoseWaypointRepeated extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest.SetPoseWaypointRepeated)
        SetPoseWaypointRepeatedOrBuilder {
      // Use SetPoseWaypointRepeated.newBuilder() to construct.
      private SetPoseWaypointRepeated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SetPoseWaypointRepeated(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SetPoseWaypointRepeated defaultInstance;
      public static SetPoseWaypointRepeated getDefaultInstance() {
        return defaultInstance;
      }

      public SetPoseWaypointRepeated getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SetPoseWaypointRepeated(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                uavId_ = input.readInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  setPoseWaypoint_ = new java.util.ArrayList<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint>();
                  mutable_bitField0_ |= 0x00000002;
                }
                setPoseWaypoint_.add(input.readMessage(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            setPoseWaypoint_ = java.util.Collections.unmodifiableList(setPoseWaypoint_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.class, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder.class);
      }

      public static com.google.protobuf.Parser<SetPoseWaypointRepeated> PARSER =
          new com.google.protobuf.AbstractParser<SetPoseWaypointRepeated>() {
        public SetPoseWaypointRepeated parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SetPoseWaypointRepeated(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SetPoseWaypointRepeated> getParserForType() {
        return PARSER;
      }

      public interface SetPoseWaypointOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required double x = 1;</code>
         */
        boolean hasX();
        /**
         * <code>required double x = 1;</code>
         */
        double getX();

        /**
         * <code>required double y = 2;</code>
         */
        boolean hasY();
        /**
         * <code>required double y = 2;</code>
         */
        double getY();

        /**
         * <code>required double z = 3;</code>
         */
        boolean hasZ();
        /**
         * <code>required double z = 3;</code>
         */
        double getZ();

        /**
         * <code>optional double yaw = 4;</code>
         */
        boolean hasYaw();
        /**
         * <code>optional double yaw = 4;</code>
         */
        double getYaw();

        /**
         * <code>optional int32 delay_ms = 5;</code>
         */
        boolean hasDelayMs();
        /**
         * <code>optional int32 delay_ms = 5;</code>
         */
        int getDelayMs();
      }
      /**
       * Protobuf type {@code pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint}
       */
      public static final class SetPoseWaypoint extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint)
          SetPoseWaypointOrBuilder {
        // Use SetPoseWaypoint.newBuilder() to construct.
        private SetPoseWaypoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private SetPoseWaypoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SetPoseWaypoint defaultInstance;
        public static SetPoseWaypoint getDefaultInstance() {
          return defaultInstance;
        }

        public SetPoseWaypoint getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private SetPoseWaypoint(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 9: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readDouble();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readDouble();
                  break;
                }
                case 25: {
                  bitField0_ |= 0x00000004;
                  z_ = input.readDouble();
                  break;
                }
                case 33: {
                  bitField0_ |= 0x00000008;
                  yaw_ = input.readDouble();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  delayMs_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.class, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder.class);
        }

        public static com.google.protobuf.Parser<SetPoseWaypoint> PARSER =
            new com.google.protobuf.AbstractParser<SetPoseWaypoint>() {
          public SetPoseWaypoint parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SetPoseWaypoint(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<SetPoseWaypoint> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int X_FIELD_NUMBER = 1;
        private double x_;
        /**
         * <code>required double x = 1;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required double x = 1;</code>
         */
        public double getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 2;
        private double y_;
        /**
         * <code>required double y = 2;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double y = 2;</code>
         */
        public double getY() {
          return y_;
        }

        public static final int Z_FIELD_NUMBER = 3;
        private double z_;
        /**
         * <code>required double z = 3;</code>
         */
        public boolean hasZ() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required double z = 3;</code>
         */
        public double getZ() {
          return z_;
        }

        public static final int YAW_FIELD_NUMBER = 4;
        private double yaw_;
        /**
         * <code>optional double yaw = 4;</code>
         */
        public boolean hasYaw() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double yaw = 4;</code>
         */
        public double getYaw() {
          return yaw_;
        }

        public static final int DELAY_MS_FIELD_NUMBER = 5;
        private int delayMs_;
        /**
         * <code>optional int32 delay_ms = 5;</code>
         */
        public boolean hasDelayMs() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 delay_ms = 5;</code>
         */
        public int getDelayMs() {
          return delayMs_;
        }

        private void initFields() {
          x_ = 0D;
          y_ = 0D;
          z_ = 0D;
          yaw_ = 0D;
          delayMs_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasZ()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeDouble(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeDouble(2, y_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeDouble(3, z_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeDouble(4, yaw_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeInt32(5, delayMs_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, y_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, z_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, yaw_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, delayMs_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint)
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.class, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder.class);
          }

          // Construct using pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            x_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000001);
            y_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000002);
            z_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000004);
            yaw_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000008);
            delayMs_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_descriptor;
          }

          public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint getDefaultInstanceForType() {
            return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.getDefaultInstance();
          }

          public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint build() {
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint buildPartial() {
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint result = new pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.y_ = y_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.z_ = z_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.yaw_ = yaw_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.delayMs_ = delayMs_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint) {
              return mergeFrom((pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint other) {
            if (other == pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasZ()) {
              setZ(other.getZ());
            }
            if (other.hasYaw()) {
              setYaw(other.getYaw());
            }
            if (other.hasDelayMs()) {
              setDelayMs(other.getDelayMs());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            if (!hasZ()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private double x_ ;
          /**
           * <code>required double x = 1;</code>
           */
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required double x = 1;</code>
           */
          public double getX() {
            return x_;
          }
          /**
           * <code>required double x = 1;</code>
           */
          public Builder setX(double value) {
            bitField0_ |= 0x00000001;
            x_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double x = 1;</code>
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0D;
            onChanged();
            return this;
          }

          private double y_ ;
          /**
           * <code>required double y = 2;</code>
           */
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required double y = 2;</code>
           */
          public double getY() {
            return y_;
          }
          /**
           * <code>required double y = 2;</code>
           */
          public Builder setY(double value) {
            bitField0_ |= 0x00000002;
            y_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double y = 2;</code>
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0D;
            onChanged();
            return this;
          }

          private double z_ ;
          /**
           * <code>required double z = 3;</code>
           */
          public boolean hasZ() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required double z = 3;</code>
           */
          public double getZ() {
            return z_;
          }
          /**
           * <code>required double z = 3;</code>
           */
          public Builder setZ(double value) {
            bitField0_ |= 0x00000004;
            z_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double z = 3;</code>
           */
          public Builder clearZ() {
            bitField0_ = (bitField0_ & ~0x00000004);
            z_ = 0D;
            onChanged();
            return this;
          }

          private double yaw_ ;
          /**
           * <code>optional double yaw = 4;</code>
           */
          public boolean hasYaw() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional double yaw = 4;</code>
           */
          public double getYaw() {
            return yaw_;
          }
          /**
           * <code>optional double yaw = 4;</code>
           */
          public Builder setYaw(double value) {
            bitField0_ |= 0x00000008;
            yaw_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double yaw = 4;</code>
           */
          public Builder clearYaw() {
            bitField0_ = (bitField0_ & ~0x00000008);
            yaw_ = 0D;
            onChanged();
            return this;
          }

          private int delayMs_ ;
          /**
           * <code>optional int32 delay_ms = 5;</code>
           */
          public boolean hasDelayMs() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional int32 delay_ms = 5;</code>
           */
          public int getDelayMs() {
            return delayMs_;
          }
          /**
           * <code>optional int32 delay_ms = 5;</code>
           */
          public Builder setDelayMs(int value) {
            bitField0_ |= 0x00000010;
            delayMs_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 delay_ms = 5;</code>
           */
          public Builder clearDelayMs() {
            bitField0_ = (bitField0_ & ~0x00000010);
            delayMs_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint)
        }

        static {
          defaultInstance = new SetPoseWaypoint(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint)
      }

      private int bitField0_;
      public static final int UAV_ID_FIELD_NUMBER = 1;
      private int uavId_;
      /**
       * <code>required int32 uav_id = 1;</code>
       */
      public boolean hasUavId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 uav_id = 1;</code>
       */
      public int getUavId() {
        return uavId_;
      }

      public static final int SET_POSE_WAYPOINT_FIELD_NUMBER = 2;
      private java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint> setPoseWaypoint_;
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      public java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint> getSetPoseWaypointList() {
        return setPoseWaypoint_;
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      public java.util.List<? extends pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder> 
          getSetPoseWaypointOrBuilderList() {
        return setPoseWaypoint_;
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      public int getSetPoseWaypointCount() {
        return setPoseWaypoint_.size();
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint getSetPoseWaypoint(int index) {
        return setPoseWaypoint_.get(index);
      }
      /**
       * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder getSetPoseWaypointOrBuilder(
          int index) {
        return setPoseWaypoint_.get(index);
      }

      private void initFields() {
        uavId_ = 0;
        setPoseWaypoint_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasUavId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getSetPoseWaypointCount(); i++) {
          if (!getSetPoseWaypoint(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, uavId_);
        }
        for (int i = 0; i < setPoseWaypoint_.size(); i++) {
          output.writeMessage(2, setPoseWaypoint_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, uavId_);
        }
        for (int i = 0; i < setPoseWaypoint_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, setPoseWaypoint_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pb_wearable.WearableRequest.SetPoseWaypointRepeated}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest.SetPoseWaypointRepeated)
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.class, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder.class);
        }

        // Construct using pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSetPoseWaypointFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          uavId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (setPoseWaypointBuilder_ == null) {
            setPoseWaypoint_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            setPoseWaypointBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor;
        }

        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated getDefaultInstanceForType() {
          return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
        }

        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated build() {
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated buildPartial() {
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated result = new pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.uavId_ = uavId_;
          if (setPoseWaypointBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              setPoseWaypoint_ = java.util.Collections.unmodifiableList(setPoseWaypoint_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.setPoseWaypoint_ = setPoseWaypoint_;
          } else {
            result.setPoseWaypoint_ = setPoseWaypointBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) {
            return mergeFrom((pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated other) {
          if (other == pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance()) return this;
          if (other.hasUavId()) {
            setUavId(other.getUavId());
          }
          if (setPoseWaypointBuilder_ == null) {
            if (!other.setPoseWaypoint_.isEmpty()) {
              if (setPoseWaypoint_.isEmpty()) {
                setPoseWaypoint_ = other.setPoseWaypoint_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureSetPoseWaypointIsMutable();
                setPoseWaypoint_.addAll(other.setPoseWaypoint_);
              }
              onChanged();
            }
          } else {
            if (!other.setPoseWaypoint_.isEmpty()) {
              if (setPoseWaypointBuilder_.isEmpty()) {
                setPoseWaypointBuilder_.dispose();
                setPoseWaypointBuilder_ = null;
                setPoseWaypoint_ = other.setPoseWaypoint_;
                bitField0_ = (bitField0_ & ~0x00000002);
                setPoseWaypointBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getSetPoseWaypointFieldBuilder() : null;
              } else {
                setPoseWaypointBuilder_.addAllMessages(other.setPoseWaypoint_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasUavId()) {
            
            return false;
          }
          for (int i = 0; i < getSetPoseWaypointCount(); i++) {
            if (!getSetPoseWaypoint(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int uavId_ ;
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public boolean hasUavId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public int getUavId() {
          return uavId_;
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public Builder setUavId(int value) {
          bitField0_ |= 0x00000001;
          uavId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public Builder clearUavId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          uavId_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint> setPoseWaypoint_ =
          java.util.Collections.emptyList();
        private void ensureSetPoseWaypointIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            setPoseWaypoint_ = new java.util.ArrayList<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint>(setPoseWaypoint_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder> setPoseWaypointBuilder_;

        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint> getSetPoseWaypointList() {
          if (setPoseWaypointBuilder_ == null) {
            return java.util.Collections.unmodifiableList(setPoseWaypoint_);
          } else {
            return setPoseWaypointBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public int getSetPoseWaypointCount() {
          if (setPoseWaypointBuilder_ == null) {
            return setPoseWaypoint_.size();
          } else {
            return setPoseWaypointBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint getSetPoseWaypoint(int index) {
          if (setPoseWaypointBuilder_ == null) {
            return setPoseWaypoint_.get(index);
          } else {
            return setPoseWaypointBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder setSetPoseWaypoint(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint value) {
          if (setPoseWaypointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.set(index, value);
            onChanged();
          } else {
            setPoseWaypointBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder setSetPoseWaypoint(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder builderForValue) {
          if (setPoseWaypointBuilder_ == null) {
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.set(index, builderForValue.build());
            onChanged();
          } else {
            setPoseWaypointBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder addSetPoseWaypoint(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint value) {
          if (setPoseWaypointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.add(value);
            onChanged();
          } else {
            setPoseWaypointBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder addSetPoseWaypoint(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint value) {
          if (setPoseWaypointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.add(index, value);
            onChanged();
          } else {
            setPoseWaypointBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder addSetPoseWaypoint(
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder builderForValue) {
          if (setPoseWaypointBuilder_ == null) {
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.add(builderForValue.build());
            onChanged();
          } else {
            setPoseWaypointBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder addSetPoseWaypoint(
            int index, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder builderForValue) {
          if (setPoseWaypointBuilder_ == null) {
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.add(index, builderForValue.build());
            onChanged();
          } else {
            setPoseWaypointBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder addAllSetPoseWaypoint(
            java.lang.Iterable<? extends pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint> values) {
          if (setPoseWaypointBuilder_ == null) {
            ensureSetPoseWaypointIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, setPoseWaypoint_);
            onChanged();
          } else {
            setPoseWaypointBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder clearSetPoseWaypoint() {
          if (setPoseWaypointBuilder_ == null) {
            setPoseWaypoint_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            setPoseWaypointBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public Builder removeSetPoseWaypoint(int index) {
          if (setPoseWaypointBuilder_ == null) {
            ensureSetPoseWaypointIsMutable();
            setPoseWaypoint_.remove(index);
            onChanged();
          } else {
            setPoseWaypointBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder getSetPoseWaypointBuilder(
            int index) {
          return getSetPoseWaypointFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder getSetPoseWaypointOrBuilder(
            int index) {
          if (setPoseWaypointBuilder_ == null) {
            return setPoseWaypoint_.get(index);  } else {
            return setPoseWaypointBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public java.util.List<? extends pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder> 
             getSetPoseWaypointOrBuilderList() {
          if (setPoseWaypointBuilder_ != null) {
            return setPoseWaypointBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(setPoseWaypoint_);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder addSetPoseWaypointBuilder() {
          return getSetPoseWaypointFieldBuilder().addBuilder(
              pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder addSetPoseWaypointBuilder(
            int index) {
          return getSetPoseWaypointFieldBuilder().addBuilder(
              index, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint set_pose_waypoint = 2;</code>
         */
        public java.util.List<pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder> 
             getSetPoseWaypointBuilderList() {
          return getSetPoseWaypointFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder> 
            getSetPoseWaypointFieldBuilder() {
          if (setPoseWaypointBuilder_ == null) {
            setPoseWaypointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypoint.Builder, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.SetPoseWaypointOrBuilder>(
                    setPoseWaypoint_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            setPoseWaypoint_ = null;
          }
          return setPoseWaypointBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest.SetPoseWaypointRepeated)
      }

      static {
        defaultInstance = new SetPoseWaypointRepeated(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest.SetPoseWaypointRepeated)
    }

    private int bitField0_;
    private int oneofWearablerequestCase_ = 0;
    private java.lang.Object oneofWearablerequest_;
    public enum OneofWearablerequestCase
        implements com.google.protobuf.Internal.EnumLite {
      SET_POSE_REPEATED(2),
      SET_POSE_WAYPOINT_REPEATED(3),
      GET_POSE_REPEATED(4),
      ONEOFWEARABLEREQUEST_NOT_SET(0);
      private int value = 0;
      private OneofWearablerequestCase(int value) {
        this.value = value;
      }
      public static OneofWearablerequestCase valueOf(int value) {
        switch (value) {
          case 2: return SET_POSE_REPEATED;
          case 3: return SET_POSE_WAYPOINT_REPEATED;
          case 4: return GET_POSE_REPEATED;
          case 0: return ONEOFWEARABLEREQUEST_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OneofWearablerequestCase
    getOneofWearablerequestCase() {
      return OneofWearablerequestCase.valueOf(
          oneofWearablerequestCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private pb_wearable.Wearable.WearableRequest.WearableRequestType type_;
    /**
     * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
     */
    public pb_wearable.Wearable.WearableRequest.WearableRequestType getType() {
      return type_;
    }

    public static final int SET_POSE_REPEATED_FIELD_NUMBER = 2;
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
     */
    public boolean hasSetPoseRepeated() {
      return oneofWearablerequestCase_ == 2;
    }
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
     */
    public pb_wearable.Wearable.WearableRequest.SetPoseRepeated getSetPoseRepeated() {
      if (oneofWearablerequestCase_ == 2) {
         return (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_;
      }
      return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
    }
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
     */
    public pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder getSetPoseRepeatedOrBuilder() {
      if (oneofWearablerequestCase_ == 2) {
         return (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_;
      }
      return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
    }

    public static final int SET_POSE_WAYPOINT_REPEATED_FIELD_NUMBER = 3;
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
     */
    public boolean hasSetPoseWaypointRepeated() {
      return oneofWearablerequestCase_ == 3;
    }
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
     */
    public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated getSetPoseWaypointRepeated() {
      if (oneofWearablerequestCase_ == 3) {
         return (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_;
      }
      return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
    }
    /**
     * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
     */
    public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder getSetPoseWaypointRepeatedOrBuilder() {
      if (oneofWearablerequestCase_ == 3) {
         return (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_;
      }
      return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
    }

    public static final int GET_POSE_REPEATED_FIELD_NUMBER = 4;
    /**
     * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
     *
     * <pre>
     * Infrequent requests should come last
     * </pre>
     */
    public boolean hasGetPoseRepeated() {
      return oneofWearablerequestCase_ == 4;
    }
    /**
     * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
     *
     * <pre>
     * Infrequent requests should come last
     * </pre>
     */
    public pb_wearable.Wearable.WearableRequest.GetPoseRepeated getGetPoseRepeated() {
      if (oneofWearablerequestCase_ == 4) {
         return (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_;
      }
      return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
    }
    /**
     * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
     *
     * <pre>
     * Infrequent requests should come last
     * </pre>
     */
    public pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder getGetPoseRepeatedOrBuilder() {
      if (oneofWearablerequestCase_ == 4) {
         return (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_;
      }
      return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
    }

    private void initFields() {
      type_ = pb_wearable.Wearable.WearableRequest.WearableRequestType.GET_REGION;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSetPoseRepeated()) {
        if (!getSetPoseRepeated().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSetPoseWaypointRepeated()) {
        if (!getSetPoseWaypointRepeated().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetPoseRepeated()) {
        if (!getGetPoseRepeated().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (oneofWearablerequestCase_ == 2) {
        output.writeMessage(2, (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_);
      }
      if (oneofWearablerequestCase_ == 3) {
        output.writeMessage(3, (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_);
      }
      if (oneofWearablerequestCase_ == 4) {
        output.writeMessage(4, (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (oneofWearablerequestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_);
      }
      if (oneofWearablerequestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_);
      }
      if (oneofWearablerequestCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pb_wearable.Wearable.WearableRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pb_wearable.Wearable.WearableRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb_wearable.Wearable.WearableRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pb_wearable.Wearable.WearableRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb_wearable.WearableRequest}
     *
     * <pre>
     * *****************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_wearable.WearableRequest)
        pb_wearable.Wearable.WearableRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableRequest.class, pb_wearable.Wearable.WearableRequest.Builder.class);
      }

      // Construct using pb_wearable.Wearable.WearableRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = pb_wearable.Wearable.WearableRequest.WearableRequestType.GET_REGION;
        bitField0_ = (bitField0_ & ~0x00000001);
        oneofWearablerequestCase_ = 0;
        oneofWearablerequest_ = null;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableRequest_descriptor;
      }

      public pb_wearable.Wearable.WearableRequest getDefaultInstanceForType() {
        return pb_wearable.Wearable.WearableRequest.getDefaultInstance();
      }

      public pb_wearable.Wearable.WearableRequest build() {
        pb_wearable.Wearable.WearableRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pb_wearable.Wearable.WearableRequest buildPartial() {
        pb_wearable.Wearable.WearableRequest result = new pb_wearable.Wearable.WearableRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (oneofWearablerequestCase_ == 2) {
          if (setPoseRepeatedBuilder_ == null) {
            result.oneofWearablerequest_ = oneofWearablerequest_;
          } else {
            result.oneofWearablerequest_ = setPoseRepeatedBuilder_.build();
          }
        }
        if (oneofWearablerequestCase_ == 3) {
          if (setPoseWaypointRepeatedBuilder_ == null) {
            result.oneofWearablerequest_ = oneofWearablerequest_;
          } else {
            result.oneofWearablerequest_ = setPoseWaypointRepeatedBuilder_.build();
          }
        }
        if (oneofWearablerequestCase_ == 4) {
          if (getPoseRepeatedBuilder_ == null) {
            result.oneofWearablerequest_ = oneofWearablerequest_;
          } else {
            result.oneofWearablerequest_ = getPoseRepeatedBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.oneofWearablerequestCase_ = oneofWearablerequestCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pb_wearable.Wearable.WearableRequest) {
          return mergeFrom((pb_wearable.Wearable.WearableRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pb_wearable.Wearable.WearableRequest other) {
        if (other == pb_wearable.Wearable.WearableRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        switch (other.getOneofWearablerequestCase()) {
          case SET_POSE_REPEATED: {
            mergeSetPoseRepeated(other.getSetPoseRepeated());
            break;
          }
          case SET_POSE_WAYPOINT_REPEATED: {
            mergeSetPoseWaypointRepeated(other.getSetPoseWaypointRepeated());
            break;
          }
          case GET_POSE_REPEATED: {
            mergeGetPoseRepeated(other.getGetPoseRepeated());
            break;
          }
          case ONEOFWEARABLEREQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasSetPoseRepeated()) {
          if (!getSetPoseRepeated().isInitialized()) {
            
            return false;
          }
        }
        if (hasSetPoseWaypointRepeated()) {
          if (!getSetPoseWaypointRepeated().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetPoseRepeated()) {
          if (!getGetPoseRepeated().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pb_wearable.Wearable.WearableRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pb_wearable.Wearable.WearableRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int oneofWearablerequestCase_ = 0;
      private java.lang.Object oneofWearablerequest_;
      public OneofWearablerequestCase
          getOneofWearablerequestCase() {
        return OneofWearablerequestCase.valueOf(
            oneofWearablerequestCase_);
      }

      public Builder clearOneofWearablerequest() {
        oneofWearablerequestCase_ = 0;
        oneofWearablerequest_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private pb_wearable.Wearable.WearableRequest.WearableRequestType type_ = pb_wearable.Wearable.WearableRequest.WearableRequestType.GET_REGION;
      /**
       * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
       */
      public pb_wearable.Wearable.WearableRequest.WearableRequestType getType() {
        return type_;
      }
      /**
       * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
       */
      public Builder setType(pb_wearable.Wearable.WearableRequest.WearableRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .pb_wearable.WearableRequest.WearableRequestType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = pb_wearable.Wearable.WearableRequest.WearableRequestType.GET_REGION;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableRequest.SetPoseRepeated, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder, pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder> setPoseRepeatedBuilder_;
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public boolean hasSetPoseRepeated() {
        return oneofWearablerequestCase_ == 2;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseRepeated getSetPoseRepeated() {
        if (setPoseRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 2) {
            return (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_;
          }
          return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
        } else {
          if (oneofWearablerequestCase_ == 2) {
            return setPoseRepeatedBuilder_.getMessage();
          }
          return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public Builder setSetPoseRepeated(pb_wearable.Wearable.WearableRequest.SetPoseRepeated value) {
        if (setPoseRepeatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofWearablerequest_ = value;
          onChanged();
        } else {
          setPoseRepeatedBuilder_.setMessage(value);
        }
        oneofWearablerequestCase_ = 2;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public Builder setSetPoseRepeated(
          pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder builderForValue) {
        if (setPoseRepeatedBuilder_ == null) {
          oneofWearablerequest_ = builderForValue.build();
          onChanged();
        } else {
          setPoseRepeatedBuilder_.setMessage(builderForValue.build());
        }
        oneofWearablerequestCase_ = 2;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public Builder mergeSetPoseRepeated(pb_wearable.Wearable.WearableRequest.SetPoseRepeated value) {
        if (setPoseRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 2 &&
              oneofWearablerequest_ != pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance()) {
            oneofWearablerequest_ = pb_wearable.Wearable.WearableRequest.SetPoseRepeated.newBuilder((pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofWearablerequest_ = value;
          }
          onChanged();
        } else {
          if (oneofWearablerequestCase_ == 2) {
            setPoseRepeatedBuilder_.mergeFrom(value);
          }
          setPoseRepeatedBuilder_.setMessage(value);
        }
        oneofWearablerequestCase_ = 2;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public Builder clearSetPoseRepeated() {
        if (setPoseRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 2) {
            oneofWearablerequestCase_ = 0;
            oneofWearablerequest_ = null;
            onChanged();
          }
        } else {
          if (oneofWearablerequestCase_ == 2) {
            oneofWearablerequestCase_ = 0;
            oneofWearablerequest_ = null;
          }
          setPoseRepeatedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder getSetPoseRepeatedBuilder() {
        return getSetPoseRepeatedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder getSetPoseRepeatedOrBuilder() {
        if ((oneofWearablerequestCase_ == 2) && (setPoseRepeatedBuilder_ != null)) {
          return setPoseRepeatedBuilder_.getMessageOrBuilder();
        } else {
          if (oneofWearablerequestCase_ == 2) {
            return (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_;
          }
          return pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseRepeated set_pose_repeated = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableRequest.SetPoseRepeated, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder, pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder> 
          getSetPoseRepeatedFieldBuilder() {
        if (setPoseRepeatedBuilder_ == null) {
          if (!(oneofWearablerequestCase_ == 2)) {
            oneofWearablerequest_ = pb_wearable.Wearable.WearableRequest.SetPoseRepeated.getDefaultInstance();
          }
          setPoseRepeatedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb_wearable.Wearable.WearableRequest.SetPoseRepeated, pb_wearable.Wearable.WearableRequest.SetPoseRepeated.Builder, pb_wearable.Wearable.WearableRequest.SetPoseRepeatedOrBuilder>(
                  (pb_wearable.Wearable.WearableRequest.SetPoseRepeated) oneofWearablerequest_,
                  getParentForChildren(),
                  isClean());
          oneofWearablerequest_ = null;
        }
        oneofWearablerequestCase_ = 2;
        return setPoseRepeatedBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder> setPoseWaypointRepeatedBuilder_;
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public boolean hasSetPoseWaypointRepeated() {
        return oneofWearablerequestCase_ == 3;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated getSetPoseWaypointRepeated() {
        if (setPoseWaypointRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 3) {
            return (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_;
          }
          return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
        } else {
          if (oneofWearablerequestCase_ == 3) {
            return setPoseWaypointRepeatedBuilder_.getMessage();
          }
          return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public Builder setSetPoseWaypointRepeated(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated value) {
        if (setPoseWaypointRepeatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofWearablerequest_ = value;
          onChanged();
        } else {
          setPoseWaypointRepeatedBuilder_.setMessage(value);
        }
        oneofWearablerequestCase_ = 3;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public Builder setSetPoseWaypointRepeated(
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder builderForValue) {
        if (setPoseWaypointRepeatedBuilder_ == null) {
          oneofWearablerequest_ = builderForValue.build();
          onChanged();
        } else {
          setPoseWaypointRepeatedBuilder_.setMessage(builderForValue.build());
        }
        oneofWearablerequestCase_ = 3;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public Builder mergeSetPoseWaypointRepeated(pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated value) {
        if (setPoseWaypointRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 3 &&
              oneofWearablerequest_ != pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance()) {
            oneofWearablerequest_ = pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.newBuilder((pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofWearablerequest_ = value;
          }
          onChanged();
        } else {
          if (oneofWearablerequestCase_ == 3) {
            setPoseWaypointRepeatedBuilder_.mergeFrom(value);
          }
          setPoseWaypointRepeatedBuilder_.setMessage(value);
        }
        oneofWearablerequestCase_ = 3;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public Builder clearSetPoseWaypointRepeated() {
        if (setPoseWaypointRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 3) {
            oneofWearablerequestCase_ = 0;
            oneofWearablerequest_ = null;
            onChanged();
          }
        } else {
          if (oneofWearablerequestCase_ == 3) {
            oneofWearablerequestCase_ = 0;
            oneofWearablerequest_ = null;
          }
          setPoseWaypointRepeatedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder getSetPoseWaypointRepeatedBuilder() {
        return getSetPoseWaypointRepeatedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      public pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder getSetPoseWaypointRepeatedOrBuilder() {
        if ((oneofWearablerequestCase_ == 3) && (setPoseWaypointRepeatedBuilder_ != null)) {
          return setPoseWaypointRepeatedBuilder_.getMessageOrBuilder();
        } else {
          if (oneofWearablerequestCase_ == 3) {
            return (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_;
          }
          return pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.SetPoseWaypointRepeated set_pose_waypoint_repeated = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder> 
          getSetPoseWaypointRepeatedFieldBuilder() {
        if (setPoseWaypointRepeatedBuilder_ == null) {
          if (!(oneofWearablerequestCase_ == 3)) {
            oneofWearablerequest_ = pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.getDefaultInstance();
          }
          setPoseWaypointRepeatedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated.Builder, pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeatedOrBuilder>(
                  (pb_wearable.Wearable.WearableRequest.SetPoseWaypointRepeated) oneofWearablerequest_,
                  getParentForChildren(),
                  isClean());
          oneofWearablerequest_ = null;
        }
        oneofWearablerequestCase_ = 3;
        return setPoseWaypointRepeatedBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableRequest.GetPoseRepeated, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder, pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder> getPoseRepeatedBuilder_;
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public boolean hasGetPoseRepeated() {
        return oneofWearablerequestCase_ == 4;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.GetPoseRepeated getGetPoseRepeated() {
        if (getPoseRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 4) {
            return (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_;
          }
          return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
        } else {
          if (oneofWearablerequestCase_ == 4) {
            return getPoseRepeatedBuilder_.getMessage();
          }
          return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public Builder setGetPoseRepeated(pb_wearable.Wearable.WearableRequest.GetPoseRepeated value) {
        if (getPoseRepeatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofWearablerequest_ = value;
          onChanged();
        } else {
          getPoseRepeatedBuilder_.setMessage(value);
        }
        oneofWearablerequestCase_ = 4;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public Builder setGetPoseRepeated(
          pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder builderForValue) {
        if (getPoseRepeatedBuilder_ == null) {
          oneofWearablerequest_ = builderForValue.build();
          onChanged();
        } else {
          getPoseRepeatedBuilder_.setMessage(builderForValue.build());
        }
        oneofWearablerequestCase_ = 4;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public Builder mergeGetPoseRepeated(pb_wearable.Wearable.WearableRequest.GetPoseRepeated value) {
        if (getPoseRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 4 &&
              oneofWearablerequest_ != pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance()) {
            oneofWearablerequest_ = pb_wearable.Wearable.WearableRequest.GetPoseRepeated.newBuilder((pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofWearablerequest_ = value;
          }
          onChanged();
        } else {
          if (oneofWearablerequestCase_ == 4) {
            getPoseRepeatedBuilder_.mergeFrom(value);
          }
          getPoseRepeatedBuilder_.setMessage(value);
        }
        oneofWearablerequestCase_ = 4;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public Builder clearGetPoseRepeated() {
        if (getPoseRepeatedBuilder_ == null) {
          if (oneofWearablerequestCase_ == 4) {
            oneofWearablerequestCase_ = 0;
            oneofWearablerequest_ = null;
            onChanged();
          }
        } else {
          if (oneofWearablerequestCase_ == 4) {
            oneofWearablerequestCase_ = 0;
            oneofWearablerequest_ = null;
          }
          getPoseRepeatedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder getGetPoseRepeatedBuilder() {
        return getGetPoseRepeatedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      public pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder getGetPoseRepeatedOrBuilder() {
        if ((oneofWearablerequestCase_ == 4) && (getPoseRepeatedBuilder_ != null)) {
          return getPoseRepeatedBuilder_.getMessageOrBuilder();
        } else {
          if (oneofWearablerequestCase_ == 4) {
            return (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_;
          }
          return pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableRequest.GetPoseRepeated get_pose_repeated = 4;</code>
       *
       * <pre>
       * Infrequent requests should come last
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableRequest.GetPoseRepeated, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder, pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder> 
          getGetPoseRepeatedFieldBuilder() {
        if (getPoseRepeatedBuilder_ == null) {
          if (!(oneofWearablerequestCase_ == 4)) {
            oneofWearablerequest_ = pb_wearable.Wearable.WearableRequest.GetPoseRepeated.getDefaultInstance();
          }
          getPoseRepeatedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb_wearable.Wearable.WearableRequest.GetPoseRepeated, pb_wearable.Wearable.WearableRequest.GetPoseRepeated.Builder, pb_wearable.Wearable.WearableRequest.GetPoseRepeatedOrBuilder>(
                  (pb_wearable.Wearable.WearableRequest.GetPoseRepeated) oneofWearablerequest_,
                  getParentForChildren(),
                  isClean());
          oneofWearablerequest_ = null;
        }
        oneofWearablerequestCase_ = 4;
        return getPoseRepeatedBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pb_wearable.WearableRequest)
    }

    static {
      defaultInstance = new WearableRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pb_wearable.WearableRequest)
  }

  public interface WearableResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb_wearable.WearableResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
     */
    pb_wearable.Wearable.WearableResponse.WearableResponseType getType();

    /**
     * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
     */
    boolean hasPeriodicStatus();
    /**
     * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
     */
    pb_wearable.Wearable.WearableResponse.PeriodicStatus getPeriodicStatus();
    /**
     * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
     */
    pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder getPeriodicStatusOrBuilder();

    /**
     * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
     */
    boolean hasPoseRepeated();
    /**
     * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
     */
    pb_wearable.Wearable.WearableResponse.PoseRepeated getPoseRepeated();
    /**
     * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
     */
    pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder getPoseRepeatedOrBuilder();

    /**
     * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
     *
     * <pre>
     * Infrequent responses should come last
     * </pre>
     */
    boolean hasRegion();
    /**
     * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
     *
     * <pre>
     * Infrequent responses should come last
     * </pre>
     */
    pb_wearable.Wearable.WearableResponse.Region getRegion();
    /**
     * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
     *
     * <pre>
     * Infrequent responses should come last
     * </pre>
     */
    pb_wearable.Wearable.WearableResponse.RegionOrBuilder getRegionOrBuilder();
  }
  /**
   * Protobuf type {@code pb_wearable.WearableResponse}
   *
   * <pre>
   * ****************************************
   * </pre>
   */
  public static final class WearableResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pb_wearable.WearableResponse)
      WearableResponseOrBuilder {
    // Use WearableResponse.newBuilder() to construct.
    private WearableResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WearableResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WearableResponse defaultInstance;
    public static WearableResponse getDefaultInstance() {
      return defaultInstance;
    }

    public WearableResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WearableResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              pb_wearable.Wearable.WearableResponse.WearableResponseType value = pb_wearable.Wearable.WearableResponse.WearableResponseType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder subBuilder = null;
              if (oneofWearableresponseCase_ == 2) {
                subBuilder = ((pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_).toBuilder();
              }
              oneofWearableresponse_ = input.readMessage(pb_wearable.Wearable.WearableResponse.PeriodicStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_);
                oneofWearableresponse_ = subBuilder.buildPartial();
              }
              oneofWearableresponseCase_ = 2;
              break;
            }
            case 26: {
              pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder subBuilder = null;
              if (oneofWearableresponseCase_ == 3) {
                subBuilder = ((pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_).toBuilder();
              }
              oneofWearableresponse_ = input.readMessage(pb_wearable.Wearable.WearableResponse.PoseRepeated.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_);
                oneofWearableresponse_ = subBuilder.buildPartial();
              }
              oneofWearableresponseCase_ = 3;
              break;
            }
            case 34: {
              pb_wearable.Wearable.WearableResponse.Region.Builder subBuilder = null;
              if (oneofWearableresponseCase_ == 4) {
                subBuilder = ((pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_).toBuilder();
              }
              oneofWearableresponse_ = input.readMessage(pb_wearable.Wearable.WearableResponse.Region.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_);
                oneofWearableresponse_ = subBuilder.buildPartial();
              }
              oneofWearableresponseCase_ = 4;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb_wearable.Wearable.WearableResponse.class, pb_wearable.Wearable.WearableResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<WearableResponse> PARSER =
        new com.google.protobuf.AbstractParser<WearableResponse>() {
      public WearableResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WearableResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WearableResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code pb_wearable.WearableResponse.WearableResponseType}
     */
    public enum WearableResponseType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PERIODIC_STATUS = 0;</code>
       */
      PERIODIC_STATUS(0, 0),
      /**
       * <code>POSE_REPEATED = 1;</code>
       */
      POSE_REPEATED(1, 1),
      /**
       * <code>REGION = 2;</code>
       */
      REGION(2, 2),
      ;

      /**
       * <code>PERIODIC_STATUS = 0;</code>
       */
      public static final int PERIODIC_STATUS_VALUE = 0;
      /**
       * <code>POSE_REPEATED = 1;</code>
       */
      public static final int POSE_REPEATED_VALUE = 1;
      /**
       * <code>REGION = 2;</code>
       */
      public static final int REGION_VALUE = 2;


      public final int getNumber() { return value; }

      public static WearableResponseType valueOf(int value) {
        switch (value) {
          case 0: return PERIODIC_STATUS;
          case 1: return POSE_REPEATED;
          case 2: return REGION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WearableResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<WearableResponseType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WearableResponseType>() {
              public WearableResponseType findValueByNumber(int number) {
                return WearableResponseType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return pb_wearable.Wearable.WearableResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final WearableResponseType[] VALUES = values();

      public static WearableResponseType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private WearableResponseType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:pb_wearable.WearableResponse.WearableResponseType)
    }

    public interface PoseRepeatedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pb_wearable.WearableResponse.PoseRepeated)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      java.util.List<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose> 
          getPoseList();
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose getPose(int index);
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      int getPoseCount();
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      java.util.List<? extends pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder> 
          getPoseOrBuilderList();
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder getPoseOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code pb_wearable.WearableResponse.PoseRepeated}
     */
    public static final class PoseRepeated extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pb_wearable.WearableResponse.PoseRepeated)
        PoseRepeatedOrBuilder {
      // Use PoseRepeated.newBuilder() to construct.
      private PoseRepeated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PoseRepeated(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PoseRepeated defaultInstance;
      public static PoseRepeated getDefaultInstance() {
        return defaultInstance;
      }

      public PoseRepeated getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PoseRepeated(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  pose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose>();
                  mutable_bitField0_ |= 0x00000001;
                }
                pose_.add(input.readMessage(pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            pose_ = java.util.Collections.unmodifiableList(pose_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableResponse.PoseRepeated.class, pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder.class);
      }

      public static com.google.protobuf.Parser<PoseRepeated> PARSER =
          new com.google.protobuf.AbstractParser<PoseRepeated>() {
        public PoseRepeated parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PoseRepeated(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PoseRepeated> getParserForType() {
        return PARSER;
      }

      public interface PoseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pb_wearable.WearableResponse.PoseRepeated.Pose)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required int32 uav_id = 1;</code>
         */
        boolean hasUavId();
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        int getUavId();

        /**
         * <code>required double x = 2;</code>
         */
        boolean hasX();
        /**
         * <code>required double x = 2;</code>
         */
        double getX();

        /**
         * <code>required double y = 3;</code>
         */
        boolean hasY();
        /**
         * <code>required double y = 3;</code>
         */
        double getY();

        /**
         * <code>required double z = 4;</code>
         */
        boolean hasZ();
        /**
         * <code>required double z = 4;</code>
         */
        double getZ();

        /**
         * <code>optional double yaw = 5;</code>
         */
        boolean hasYaw();
        /**
         * <code>optional double yaw = 5;</code>
         */
        double getYaw();
      }
      /**
       * Protobuf type {@code pb_wearable.WearableResponse.PoseRepeated.Pose}
       */
      public static final class Pose extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:pb_wearable.WearableResponse.PoseRepeated.Pose)
          PoseOrBuilder {
        // Use Pose.newBuilder() to construct.
        private Pose(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Pose(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Pose defaultInstance;
        public static Pose getDefaultInstance() {
          return defaultInstance;
        }

        public Pose getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Pose(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  uavId_ = input.readInt32();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  x_ = input.readDouble();
                  break;
                }
                case 25: {
                  bitField0_ |= 0x00000004;
                  y_ = input.readDouble();
                  break;
                }
                case 33: {
                  bitField0_ |= 0x00000008;
                  z_ = input.readDouble();
                  break;
                }
                case 41: {
                  bitField0_ |= 0x00000010;
                  yaw_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.class, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder.class);
        }

        public static com.google.protobuf.Parser<Pose> PARSER =
            new com.google.protobuf.AbstractParser<Pose>() {
          public Pose parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Pose(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Pose> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int UAV_ID_FIELD_NUMBER = 1;
        private int uavId_;
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public boolean hasUavId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public int getUavId() {
          return uavId_;
        }

        public static final int X_FIELD_NUMBER = 2;
        private double x_;
        /**
         * <code>required double x = 2;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double x = 2;</code>
         */
        public double getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 3;
        private double y_;
        /**
         * <code>required double y = 3;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required double y = 3;</code>
         */
        public double getY() {
          return y_;
        }

        public static final int Z_FIELD_NUMBER = 4;
        private double z_;
        /**
         * <code>required double z = 4;</code>
         */
        public boolean hasZ() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required double z = 4;</code>
         */
        public double getZ() {
          return z_;
        }

        public static final int YAW_FIELD_NUMBER = 5;
        private double yaw_;
        /**
         * <code>optional double yaw = 5;</code>
         */
        public boolean hasYaw() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional double yaw = 5;</code>
         */
        public double getYaw() {
          return yaw_;
        }

        private void initFields() {
          uavId_ = 0;
          x_ = 0D;
          y_ = 0D;
          z_ = 0D;
          yaw_ = 0D;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          if (!hasUavId()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasZ()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(1, uavId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeDouble(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeDouble(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeDouble(4, z_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeDouble(5, yaw_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, uavId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, z_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(5, yaw_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code pb_wearable.WearableResponse.PoseRepeated.Pose}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pb_wearable.WearableResponse.PoseRepeated.Pose)
            pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.class, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder.class);
          }

          // Construct using pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            uavId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000004);
            z_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000008);
            yaw_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_descriptor;
          }

          public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose getDefaultInstanceForType() {
            return pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.getDefaultInstance();
          }

          public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose build() {
            pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose buildPartial() {
            pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose result = new pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.uavId_ = uavId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.y_ = y_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.z_ = z_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.yaw_ = yaw_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose) {
              return mergeFrom((pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose other) {
            if (other == pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.getDefaultInstance()) return this;
            if (other.hasUavId()) {
              setUavId(other.getUavId());
            }
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasZ()) {
              setZ(other.getZ());
            }
            if (other.hasYaw()) {
              setYaw(other.getYaw());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasUavId()) {
              
              return false;
            }
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            if (!hasZ()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int uavId_ ;
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public boolean hasUavId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public int getUavId() {
            return uavId_;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder setUavId(int value) {
            bitField0_ |= 0x00000001;
            uavId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder clearUavId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            uavId_ = 0;
            onChanged();
            return this;
          }

          private double x_ ;
          /**
           * <code>required double x = 2;</code>
           */
          public boolean hasX() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required double x = 2;</code>
           */
          public double getX() {
            return x_;
          }
          /**
           * <code>required double x = 2;</code>
           */
          public Builder setX(double value) {
            bitField0_ |= 0x00000002;
            x_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double x = 2;</code>
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000002);
            x_ = 0D;
            onChanged();
            return this;
          }

          private double y_ ;
          /**
           * <code>required double y = 3;</code>
           */
          public boolean hasY() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required double y = 3;</code>
           */
          public double getY() {
            return y_;
          }
          /**
           * <code>required double y = 3;</code>
           */
          public Builder setY(double value) {
            bitField0_ |= 0x00000004;
            y_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double y = 3;</code>
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000004);
            y_ = 0D;
            onChanged();
            return this;
          }

          private double z_ ;
          /**
           * <code>required double z = 4;</code>
           */
          public boolean hasZ() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>required double z = 4;</code>
           */
          public double getZ() {
            return z_;
          }
          /**
           * <code>required double z = 4;</code>
           */
          public Builder setZ(double value) {
            bitField0_ |= 0x00000008;
            z_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double z = 4;</code>
           */
          public Builder clearZ() {
            bitField0_ = (bitField0_ & ~0x00000008);
            z_ = 0D;
            onChanged();
            return this;
          }

          private double yaw_ ;
          /**
           * <code>optional double yaw = 5;</code>
           */
          public boolean hasYaw() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public double getYaw() {
            return yaw_;
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public Builder setYaw(double value) {
            bitField0_ |= 0x00000010;
            yaw_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public Builder clearYaw() {
            bitField0_ = (bitField0_ & ~0x00000010);
            yaw_ = 0D;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:pb_wearable.WearableResponse.PoseRepeated.Pose)
        }

        static {
          defaultInstance = new Pose(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:pb_wearable.WearableResponse.PoseRepeated.Pose)
      }

      public static final int POSE_FIELD_NUMBER = 1;
      private java.util.List<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose> pose_;
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      public java.util.List<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose> getPoseList() {
        return pose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      public java.util.List<? extends pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder> 
          getPoseOrBuilderList() {
        return pose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      public int getPoseCount() {
        return pose_.size();
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose getPose(int index) {
        return pose_.get(index);
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder getPoseOrBuilder(
          int index) {
        return pose_.get(index);
      }

      private void initFields() {
        pose_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getPoseCount(); i++) {
          if (!getPose(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < pose_.size(); i++) {
          output.writeMessage(1, pose_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < pose_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, pose_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.PoseRepeated parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pb_wearable.Wearable.WearableResponse.PoseRepeated prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pb_wearable.WearableResponse.PoseRepeated}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pb_wearable.WearableResponse.PoseRepeated)
          pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableResponse.PoseRepeated.class, pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder.class);
        }

        // Construct using pb_wearable.Wearable.WearableResponse.PoseRepeated.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPoseFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (poseBuilder_ == null) {
            pose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            poseBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor;
        }

        public pb_wearable.Wearable.WearableResponse.PoseRepeated getDefaultInstanceForType() {
          return pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
        }

        public pb_wearable.Wearable.WearableResponse.PoseRepeated build() {
          pb_wearable.Wearable.WearableResponse.PoseRepeated result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pb_wearable.Wearable.WearableResponse.PoseRepeated buildPartial() {
          pb_wearable.Wearable.WearableResponse.PoseRepeated result = new pb_wearable.Wearable.WearableResponse.PoseRepeated(this);
          int from_bitField0_ = bitField0_;
          if (poseBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              pose_ = java.util.Collections.unmodifiableList(pose_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.pose_ = pose_;
          } else {
            result.pose_ = poseBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pb_wearable.Wearable.WearableResponse.PoseRepeated) {
            return mergeFrom((pb_wearable.Wearable.WearableResponse.PoseRepeated)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pb_wearable.Wearable.WearableResponse.PoseRepeated other) {
          if (other == pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance()) return this;
          if (poseBuilder_ == null) {
            if (!other.pose_.isEmpty()) {
              if (pose_.isEmpty()) {
                pose_ = other.pose_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensurePoseIsMutable();
                pose_.addAll(other.pose_);
              }
              onChanged();
            }
          } else {
            if (!other.pose_.isEmpty()) {
              if (poseBuilder_.isEmpty()) {
                poseBuilder_.dispose();
                poseBuilder_ = null;
                pose_ = other.pose_;
                bitField0_ = (bitField0_ & ~0x00000001);
                poseBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPoseFieldBuilder() : null;
              } else {
                poseBuilder_.addAllMessages(other.pose_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getPoseCount(); i++) {
            if (!getPose(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pb_wearable.Wearable.WearableResponse.PoseRepeated parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pb_wearable.Wearable.WearableResponse.PoseRepeated) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose> pose_ =
          java.util.Collections.emptyList();
        private void ensurePoseIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            pose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose>(pose_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder, pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder> poseBuilder_;

        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public java.util.List<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose> getPoseList() {
          if (poseBuilder_ == null) {
            return java.util.Collections.unmodifiableList(pose_);
          } else {
            return poseBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public int getPoseCount() {
          if (poseBuilder_ == null) {
            return pose_.size();
          } else {
            return poseBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose getPose(int index) {
          if (poseBuilder_ == null) {
            return pose_.get(index);
          } else {
            return poseBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder setPose(
            int index, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoseIsMutable();
            pose_.set(index, value);
            onChanged();
          } else {
            poseBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder setPose(
            int index, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.set(index, builderForValue.build());
            onChanged();
          } else {
            poseBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder addPose(pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoseIsMutable();
            pose_.add(value);
            onChanged();
          } else {
            poseBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder addPose(
            int index, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoseIsMutable();
            pose_.add(index, value);
            onChanged();
          } else {
            poseBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder addPose(
            pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.add(builderForValue.build());
            onChanged();
          } else {
            poseBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder addPose(
            int index, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.add(index, builderForValue.build());
            onChanged();
          } else {
            poseBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder addAllPose(
            java.lang.Iterable<? extends pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose> values) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, pose_);
            onChanged();
          } else {
            poseBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder clearPose() {
          if (poseBuilder_ == null) {
            pose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            poseBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public Builder removePose(int index) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.remove(index);
            onChanged();
          } else {
            poseBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder getPoseBuilder(
            int index) {
          return getPoseFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder getPoseOrBuilder(
            int index) {
          if (poseBuilder_ == null) {
            return pose_.get(index);  } else {
            return poseBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public java.util.List<? extends pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder> 
             getPoseOrBuilderList() {
          if (poseBuilder_ != null) {
            return poseBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(pose_);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder addPoseBuilder() {
          return getPoseFieldBuilder().addBuilder(
              pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder addPoseBuilder(
            int index) {
          return getPoseFieldBuilder().addBuilder(
              index, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PoseRepeated.Pose pose = 1;</code>
         */
        public java.util.List<pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder> 
             getPoseBuilderList() {
          return getPoseFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder, pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder> 
            getPoseFieldBuilder() {
          if (poseBuilder_ == null) {
            poseBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose, pb_wearable.Wearable.WearableResponse.PoseRepeated.Pose.Builder, pb_wearable.Wearable.WearableResponse.PoseRepeated.PoseOrBuilder>(
                    pose_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            pose_ = null;
          }
          return poseBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:pb_wearable.WearableResponse.PoseRepeated)
      }

      static {
        defaultInstance = new PoseRepeated(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pb_wearable.WearableResponse.PoseRepeated)
    }

    public interface RegionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pb_wearable.WearableResponse.Region)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required double x0 = 1;</code>
       *
       * <pre>
       *             y
       *             ^
       *      -------|---(x1,y1)
       *      |      |      |
       *      |      |      |
       * &lt;-----------+-----------&gt; x
       *      |      |      |
       *   (x0,y0)---|-------
       *             |
       *             v
       * </pre>
       */
      boolean hasX0();
      /**
       * <code>required double x0 = 1;</code>
       *
       * <pre>
       *             y
       *             ^
       *      -------|---(x1,y1)
       *      |      |      |
       *      |      |      |
       * &lt;-----------+-----------&gt; x
       *      |      |      |
       *   (x0,y0)---|-------
       *             |
       *             v
       * </pre>
       */
      double getX0();

      /**
       * <code>required double y0 = 2;</code>
       */
      boolean hasY0();
      /**
       * <code>required double y0 = 2;</code>
       */
      double getY0();

      /**
       * <code>required double x1 = 3;</code>
       */
      boolean hasX1();
      /**
       * <code>required double x1 = 3;</code>
       */
      double getX1();

      /**
       * <code>required double y1 = 4;</code>
       */
      boolean hasY1();
      /**
       * <code>required double y1 = 4;</code>
       */
      double getY1();
    }
    /**
     * Protobuf type {@code pb_wearable.WearableResponse.Region}
     */
    public static final class Region extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pb_wearable.WearableResponse.Region)
        RegionOrBuilder {
      // Use Region.newBuilder() to construct.
      private Region(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Region(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Region defaultInstance;
      public static Region getDefaultInstance() {
        return defaultInstance;
      }

      public Region getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Region(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                x0_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                y0_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                x1_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                y1_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_Region_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_Region_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableResponse.Region.class, pb_wearable.Wearable.WearableResponse.Region.Builder.class);
      }

      public static com.google.protobuf.Parser<Region> PARSER =
          new com.google.protobuf.AbstractParser<Region>() {
        public Region parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Region(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Region> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int X0_FIELD_NUMBER = 1;
      private double x0_;
      /**
       * <code>required double x0 = 1;</code>
       *
       * <pre>
       *             y
       *             ^
       *      -------|---(x1,y1)
       *      |      |      |
       *      |      |      |
       * &lt;-----------+-----------&gt; x
       *      |      |      |
       *   (x0,y0)---|-------
       *             |
       *             v
       * </pre>
       */
      public boolean hasX0() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double x0 = 1;</code>
       *
       * <pre>
       *             y
       *             ^
       *      -------|---(x1,y1)
       *      |      |      |
       *      |      |      |
       * &lt;-----------+-----------&gt; x
       *      |      |      |
       *   (x0,y0)---|-------
       *             |
       *             v
       * </pre>
       */
      public double getX0() {
        return x0_;
      }

      public static final int Y0_FIELD_NUMBER = 2;
      private double y0_;
      /**
       * <code>required double y0 = 2;</code>
       */
      public boolean hasY0() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double y0 = 2;</code>
       */
      public double getY0() {
        return y0_;
      }

      public static final int X1_FIELD_NUMBER = 3;
      private double x1_;
      /**
       * <code>required double x1 = 3;</code>
       */
      public boolean hasX1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double x1 = 3;</code>
       */
      public double getX1() {
        return x1_;
      }

      public static final int Y1_FIELD_NUMBER = 4;
      private double y1_;
      /**
       * <code>required double y1 = 4;</code>
       */
      public boolean hasY1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double y1 = 4;</code>
       */
      public double getY1() {
        return y1_;
      }

      private void initFields() {
        x0_ = 0D;
        y0_ = 0D;
        x1_ = 0D;
        y1_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasX0()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY0()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasX1()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY1()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, x0_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, y0_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, x1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, y1_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, x0_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, y0_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, x1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, y1_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.Region parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pb_wearable.Wearable.WearableResponse.Region prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pb_wearable.WearableResponse.Region}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pb_wearable.WearableResponse.Region)
          pb_wearable.Wearable.WearableResponse.RegionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_Region_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_Region_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableResponse.Region.class, pb_wearable.Wearable.WearableResponse.Region.Builder.class);
        }

        // Construct using pb_wearable.Wearable.WearableResponse.Region.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          x0_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          y0_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          x1_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          y1_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_Region_descriptor;
        }

        public pb_wearable.Wearable.WearableResponse.Region getDefaultInstanceForType() {
          return pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
        }

        public pb_wearable.Wearable.WearableResponse.Region build() {
          pb_wearable.Wearable.WearableResponse.Region result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pb_wearable.Wearable.WearableResponse.Region buildPartial() {
          pb_wearable.Wearable.WearableResponse.Region result = new pb_wearable.Wearable.WearableResponse.Region(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.x0_ = x0_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.y0_ = y0_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.x1_ = x1_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.y1_ = y1_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pb_wearable.Wearable.WearableResponse.Region) {
            return mergeFrom((pb_wearable.Wearable.WearableResponse.Region)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pb_wearable.Wearable.WearableResponse.Region other) {
          if (other == pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance()) return this;
          if (other.hasX0()) {
            setX0(other.getX0());
          }
          if (other.hasY0()) {
            setY0(other.getY0());
          }
          if (other.hasX1()) {
            setX1(other.getX1());
          }
          if (other.hasY1()) {
            setY1(other.getY1());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasX0()) {
            
            return false;
          }
          if (!hasY0()) {
            
            return false;
          }
          if (!hasX1()) {
            
            return false;
          }
          if (!hasY1()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pb_wearable.Wearable.WearableResponse.Region parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pb_wearable.Wearable.WearableResponse.Region) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double x0_ ;
        /**
         * <code>required double x0 = 1;</code>
         *
         * <pre>
         *             y
         *             ^
         *      -------|---(x1,y1)
         *      |      |      |
         *      |      |      |
         * &lt;-----------+-----------&gt; x
         *      |      |      |
         *   (x0,y0)---|-------
         *             |
         *             v
         * </pre>
         */
        public boolean hasX0() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required double x0 = 1;</code>
         *
         * <pre>
         *             y
         *             ^
         *      -------|---(x1,y1)
         *      |      |      |
         *      |      |      |
         * &lt;-----------+-----------&gt; x
         *      |      |      |
         *   (x0,y0)---|-------
         *             |
         *             v
         * </pre>
         */
        public double getX0() {
          return x0_;
        }
        /**
         * <code>required double x0 = 1;</code>
         *
         * <pre>
         *             y
         *             ^
         *      -------|---(x1,y1)
         *      |      |      |
         *      |      |      |
         * &lt;-----------+-----------&gt; x
         *      |      |      |
         *   (x0,y0)---|-------
         *             |
         *             v
         * </pre>
         */
        public Builder setX0(double value) {
          bitField0_ |= 0x00000001;
          x0_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double x0 = 1;</code>
         *
         * <pre>
         *             y
         *             ^
         *      -------|---(x1,y1)
         *      |      |      |
         *      |      |      |
         * &lt;-----------+-----------&gt; x
         *      |      |      |
         *   (x0,y0)---|-------
         *             |
         *             v
         * </pre>
         */
        public Builder clearX0() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x0_ = 0D;
          onChanged();
          return this;
        }

        private double y0_ ;
        /**
         * <code>required double y0 = 2;</code>
         */
        public boolean hasY0() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double y0 = 2;</code>
         */
        public double getY0() {
          return y0_;
        }
        /**
         * <code>required double y0 = 2;</code>
         */
        public Builder setY0(double value) {
          bitField0_ |= 0x00000002;
          y0_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double y0 = 2;</code>
         */
        public Builder clearY0() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y0_ = 0D;
          onChanged();
          return this;
        }

        private double x1_ ;
        /**
         * <code>required double x1 = 3;</code>
         */
        public boolean hasX1() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required double x1 = 3;</code>
         */
        public double getX1() {
          return x1_;
        }
        /**
         * <code>required double x1 = 3;</code>
         */
        public Builder setX1(double value) {
          bitField0_ |= 0x00000004;
          x1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double x1 = 3;</code>
         */
        public Builder clearX1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          x1_ = 0D;
          onChanged();
          return this;
        }

        private double y1_ ;
        /**
         * <code>required double y1 = 4;</code>
         */
        public boolean hasY1() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required double y1 = 4;</code>
         */
        public double getY1() {
          return y1_;
        }
        /**
         * <code>required double y1 = 4;</code>
         */
        public Builder setY1(double value) {
          bitField0_ |= 0x00000008;
          y1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double y1 = 4;</code>
         */
        public Builder clearY1() {
          bitField0_ = (bitField0_ & ~0x00000008);
          y1_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:pb_wearable.WearableResponse.Region)
      }

      static {
        defaultInstance = new Region(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pb_wearable.WearableResponse.Region)
    }

    public interface PeriodicStatusOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pb_wearable.WearableResponse.PeriodicStatus)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      java.util.List<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose> 
          getPoseList();
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose getPose(int index);
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      int getPoseCount();
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      java.util.List<? extends pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder> 
          getPoseOrBuilderList();
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder getPoseOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code pb_wearable.WearableResponse.PeriodicStatus}
     */
    public static final class PeriodicStatus extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pb_wearable.WearableResponse.PeriodicStatus)
        PeriodicStatusOrBuilder {
      // Use PeriodicStatus.newBuilder() to construct.
      private PeriodicStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PeriodicStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PeriodicStatus defaultInstance;
      public static PeriodicStatus getDefaultInstance() {
        return defaultInstance;
      }

      public PeriodicStatus getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PeriodicStatus(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  pose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose>();
                  mutable_bitField0_ |= 0x00000001;
                }
                pose_.add(input.readMessage(pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            pose_ = java.util.Collections.unmodifiableList(pose_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableResponse.PeriodicStatus.class, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder.class);
      }

      public static com.google.protobuf.Parser<PeriodicStatus> PARSER =
          new com.google.protobuf.AbstractParser<PeriodicStatus>() {
        public PeriodicStatus parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PeriodicStatus(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PeriodicStatus> getParserForType() {
        return PARSER;
      }

      public interface PoseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pb_wearable.WearableResponse.PeriodicStatus.Pose)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required int32 uav_id = 1;</code>
         */
        boolean hasUavId();
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        int getUavId();

        /**
         * <code>required double x = 2;</code>
         */
        boolean hasX();
        /**
         * <code>required double x = 2;</code>
         */
        double getX();

        /**
         * <code>required double y = 3;</code>
         */
        boolean hasY();
        /**
         * <code>required double y = 3;</code>
         */
        double getY();

        /**
         * <code>required double z = 4;</code>
         */
        boolean hasZ();
        /**
         * <code>required double z = 4;</code>
         */
        double getZ();

        /**
         * <code>optional double yaw = 5;</code>
         */
        boolean hasYaw();
        /**
         * <code>optional double yaw = 5;</code>
         */
        double getYaw();
      }
      /**
       * Protobuf type {@code pb_wearable.WearableResponse.PeriodicStatus.Pose}
       */
      public static final class Pose extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:pb_wearable.WearableResponse.PeriodicStatus.Pose)
          PoseOrBuilder {
        // Use Pose.newBuilder() to construct.
        private Pose(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Pose(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Pose defaultInstance;
        public static Pose getDefaultInstance() {
          return defaultInstance;
        }

        public Pose getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Pose(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  uavId_ = input.readInt32();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  x_ = input.readDouble();
                  break;
                }
                case 25: {
                  bitField0_ |= 0x00000004;
                  y_ = input.readDouble();
                  break;
                }
                case 33: {
                  bitField0_ |= 0x00000008;
                  z_ = input.readDouble();
                  break;
                }
                case 41: {
                  bitField0_ |= 0x00000010;
                  yaw_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.class, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder.class);
        }

        public static com.google.protobuf.Parser<Pose> PARSER =
            new com.google.protobuf.AbstractParser<Pose>() {
          public Pose parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Pose(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Pose> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int UAV_ID_FIELD_NUMBER = 1;
        private int uavId_;
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public boolean hasUavId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 uav_id = 1;</code>
         */
        public int getUavId() {
          return uavId_;
        }

        public static final int X_FIELD_NUMBER = 2;
        private double x_;
        /**
         * <code>required double x = 2;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double x = 2;</code>
         */
        public double getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 3;
        private double y_;
        /**
         * <code>required double y = 3;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required double y = 3;</code>
         */
        public double getY() {
          return y_;
        }

        public static final int Z_FIELD_NUMBER = 4;
        private double z_;
        /**
         * <code>required double z = 4;</code>
         */
        public boolean hasZ() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required double z = 4;</code>
         */
        public double getZ() {
          return z_;
        }

        public static final int YAW_FIELD_NUMBER = 5;
        private double yaw_;
        /**
         * <code>optional double yaw = 5;</code>
         */
        public boolean hasYaw() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional double yaw = 5;</code>
         */
        public double getYaw() {
          return yaw_;
        }

        private void initFields() {
          uavId_ = 0;
          x_ = 0D;
          y_ = 0D;
          z_ = 0D;
          yaw_ = 0D;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          if (!hasUavId()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasZ()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(1, uavId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeDouble(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeDouble(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeDouble(4, z_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeDouble(5, yaw_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, uavId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, z_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(5, yaw_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code pb_wearable.WearableResponse.PeriodicStatus.Pose}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pb_wearable.WearableResponse.PeriodicStatus.Pose)
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.class, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder.class);
          }

          // Construct using pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            uavId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000004);
            z_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000008);
            yaw_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_descriptor;
          }

          public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose getDefaultInstanceForType() {
            return pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.getDefaultInstance();
          }

          public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose build() {
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose buildPartial() {
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose result = new pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.uavId_ = uavId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.y_ = y_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.z_ = z_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.yaw_ = yaw_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose) {
              return mergeFrom((pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose other) {
            if (other == pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.getDefaultInstance()) return this;
            if (other.hasUavId()) {
              setUavId(other.getUavId());
            }
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasZ()) {
              setZ(other.getZ());
            }
            if (other.hasYaw()) {
              setYaw(other.getYaw());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasUavId()) {
              
              return false;
            }
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            if (!hasZ()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int uavId_ ;
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public boolean hasUavId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public int getUavId() {
            return uavId_;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder setUavId(int value) {
            bitField0_ |= 0x00000001;
            uavId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required int32 uav_id = 1;</code>
           */
          public Builder clearUavId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            uavId_ = 0;
            onChanged();
            return this;
          }

          private double x_ ;
          /**
           * <code>required double x = 2;</code>
           */
          public boolean hasX() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required double x = 2;</code>
           */
          public double getX() {
            return x_;
          }
          /**
           * <code>required double x = 2;</code>
           */
          public Builder setX(double value) {
            bitField0_ |= 0x00000002;
            x_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double x = 2;</code>
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000002);
            x_ = 0D;
            onChanged();
            return this;
          }

          private double y_ ;
          /**
           * <code>required double y = 3;</code>
           */
          public boolean hasY() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required double y = 3;</code>
           */
          public double getY() {
            return y_;
          }
          /**
           * <code>required double y = 3;</code>
           */
          public Builder setY(double value) {
            bitField0_ |= 0x00000004;
            y_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double y = 3;</code>
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000004);
            y_ = 0D;
            onChanged();
            return this;
          }

          private double z_ ;
          /**
           * <code>required double z = 4;</code>
           */
          public boolean hasZ() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>required double z = 4;</code>
           */
          public double getZ() {
            return z_;
          }
          /**
           * <code>required double z = 4;</code>
           */
          public Builder setZ(double value) {
            bitField0_ |= 0x00000008;
            z_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required double z = 4;</code>
           */
          public Builder clearZ() {
            bitField0_ = (bitField0_ & ~0x00000008);
            z_ = 0D;
            onChanged();
            return this;
          }

          private double yaw_ ;
          /**
           * <code>optional double yaw = 5;</code>
           */
          public boolean hasYaw() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public double getYaw() {
            return yaw_;
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public Builder setYaw(double value) {
            bitField0_ |= 0x00000010;
            yaw_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double yaw = 5;</code>
           */
          public Builder clearYaw() {
            bitField0_ = (bitField0_ & ~0x00000010);
            yaw_ = 0D;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:pb_wearable.WearableResponse.PeriodicStatus.Pose)
        }

        static {
          defaultInstance = new Pose(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:pb_wearable.WearableResponse.PeriodicStatus.Pose)
      }

      public static final int POSE_FIELD_NUMBER = 1;
      private java.util.List<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose> pose_;
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      public java.util.List<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose> getPoseList() {
        return pose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      public java.util.List<? extends pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder> 
          getPoseOrBuilderList() {
        return pose_;
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      public int getPoseCount() {
        return pose_.size();
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose getPose(int index) {
        return pose_.get(index);
      }
      /**
       * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder getPoseOrBuilder(
          int index) {
        return pose_.get(index);
      }

      private void initFields() {
        pose_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getPoseCount(); i++) {
          if (!getPose(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < pose_.size(); i++) {
          output.writeMessage(1, pose_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < pose_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, pose_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pb_wearable.Wearable.WearableResponse.PeriodicStatus parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pb_wearable.Wearable.WearableResponse.PeriodicStatus prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pb_wearable.WearableResponse.PeriodicStatus}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pb_wearable.WearableResponse.PeriodicStatus)
          pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pb_wearable.Wearable.WearableResponse.PeriodicStatus.class, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder.class);
        }

        // Construct using pb_wearable.Wearable.WearableResponse.PeriodicStatus.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPoseFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (poseBuilder_ == null) {
            pose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            poseBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor;
        }

        public pb_wearable.Wearable.WearableResponse.PeriodicStatus getDefaultInstanceForType() {
          return pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
        }

        public pb_wearable.Wearable.WearableResponse.PeriodicStatus build() {
          pb_wearable.Wearable.WearableResponse.PeriodicStatus result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pb_wearable.Wearable.WearableResponse.PeriodicStatus buildPartial() {
          pb_wearable.Wearable.WearableResponse.PeriodicStatus result = new pb_wearable.Wearable.WearableResponse.PeriodicStatus(this);
          int from_bitField0_ = bitField0_;
          if (poseBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              pose_ = java.util.Collections.unmodifiableList(pose_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.pose_ = pose_;
          } else {
            result.pose_ = poseBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pb_wearable.Wearable.WearableResponse.PeriodicStatus) {
            return mergeFrom((pb_wearable.Wearable.WearableResponse.PeriodicStatus)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pb_wearable.Wearable.WearableResponse.PeriodicStatus other) {
          if (other == pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance()) return this;
          if (poseBuilder_ == null) {
            if (!other.pose_.isEmpty()) {
              if (pose_.isEmpty()) {
                pose_ = other.pose_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensurePoseIsMutable();
                pose_.addAll(other.pose_);
              }
              onChanged();
            }
          } else {
            if (!other.pose_.isEmpty()) {
              if (poseBuilder_.isEmpty()) {
                poseBuilder_.dispose();
                poseBuilder_ = null;
                pose_ = other.pose_;
                bitField0_ = (bitField0_ & ~0x00000001);
                poseBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPoseFieldBuilder() : null;
              } else {
                poseBuilder_.addAllMessages(other.pose_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getPoseCount(); i++) {
            if (!getPose(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pb_wearable.Wearable.WearableResponse.PeriodicStatus parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pb_wearable.Wearable.WearableResponse.PeriodicStatus) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose> pose_ =
          java.util.Collections.emptyList();
        private void ensurePoseIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            pose_ = new java.util.ArrayList<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose>(pose_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder, pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder> poseBuilder_;

        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public java.util.List<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose> getPoseList() {
          if (poseBuilder_ == null) {
            return java.util.Collections.unmodifiableList(pose_);
          } else {
            return poseBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public int getPoseCount() {
          if (poseBuilder_ == null) {
            return pose_.size();
          } else {
            return poseBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose getPose(int index) {
          if (poseBuilder_ == null) {
            return pose_.get(index);
          } else {
            return poseBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder setPose(
            int index, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoseIsMutable();
            pose_.set(index, value);
            onChanged();
          } else {
            poseBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder setPose(
            int index, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.set(index, builderForValue.build());
            onChanged();
          } else {
            poseBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder addPose(pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoseIsMutable();
            pose_.add(value);
            onChanged();
          } else {
            poseBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder addPose(
            int index, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoseIsMutable();
            pose_.add(index, value);
            onChanged();
          } else {
            poseBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder addPose(
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.add(builderForValue.build());
            onChanged();
          } else {
            poseBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder addPose(
            int index, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.add(index, builderForValue.build());
            onChanged();
          } else {
            poseBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder addAllPose(
            java.lang.Iterable<? extends pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose> values) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, pose_);
            onChanged();
          } else {
            poseBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder clearPose() {
          if (poseBuilder_ == null) {
            pose_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            poseBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public Builder removePose(int index) {
          if (poseBuilder_ == null) {
            ensurePoseIsMutable();
            pose_.remove(index);
            onChanged();
          } else {
            poseBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder getPoseBuilder(
            int index) {
          return getPoseFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder getPoseOrBuilder(
            int index) {
          if (poseBuilder_ == null) {
            return pose_.get(index);  } else {
            return poseBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public java.util.List<? extends pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder> 
             getPoseOrBuilderList() {
          if (poseBuilder_ != null) {
            return poseBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(pose_);
          }
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder addPoseBuilder() {
          return getPoseFieldBuilder().addBuilder(
              pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder addPoseBuilder(
            int index) {
          return getPoseFieldBuilder().addBuilder(
              index, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.getDefaultInstance());
        }
        /**
         * <code>repeated .pb_wearable.WearableResponse.PeriodicStatus.Pose pose = 1;</code>
         */
        public java.util.List<pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder> 
             getPoseBuilderList() {
          return getPoseFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder, pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder> 
            getPoseFieldBuilder() {
          if (poseBuilder_ == null) {
            poseBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Pose.Builder, pb_wearable.Wearable.WearableResponse.PeriodicStatus.PoseOrBuilder>(
                    pose_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            pose_ = null;
          }
          return poseBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:pb_wearable.WearableResponse.PeriodicStatus)
      }

      static {
        defaultInstance = new PeriodicStatus(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pb_wearable.WearableResponse.PeriodicStatus)
    }

    private int bitField0_;
    private int oneofWearableresponseCase_ = 0;
    private java.lang.Object oneofWearableresponse_;
    public enum OneofWearableresponseCase
        implements com.google.protobuf.Internal.EnumLite {
      PERIODIC_STATUS(2),
      POSE_REPEATED(3),
      REGION(4),
      ONEOFWEARABLERESPONSE_NOT_SET(0);
      private int value = 0;
      private OneofWearableresponseCase(int value) {
        this.value = value;
      }
      public static OneofWearableresponseCase valueOf(int value) {
        switch (value) {
          case 2: return PERIODIC_STATUS;
          case 3: return POSE_REPEATED;
          case 4: return REGION;
          case 0: return ONEOFWEARABLERESPONSE_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OneofWearableresponseCase
    getOneofWearableresponseCase() {
      return OneofWearableresponseCase.valueOf(
          oneofWearableresponseCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private pb_wearable.Wearable.WearableResponse.WearableResponseType type_;
    /**
     * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
     */
    public pb_wearable.Wearable.WearableResponse.WearableResponseType getType() {
      return type_;
    }

    public static final int PERIODIC_STATUS_FIELD_NUMBER = 2;
    /**
     * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
     */
    public boolean hasPeriodicStatus() {
      return oneofWearableresponseCase_ == 2;
    }
    /**
     * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
     */
    public pb_wearable.Wearable.WearableResponse.PeriodicStatus getPeriodicStatus() {
      if (oneofWearableresponseCase_ == 2) {
         return (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_;
      }
      return pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
    }
    /**
     * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
     */
    public pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder getPeriodicStatusOrBuilder() {
      if (oneofWearableresponseCase_ == 2) {
         return (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_;
      }
      return pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
    }

    public static final int POSE_REPEATED_FIELD_NUMBER = 3;
    /**
     * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
     */
    public boolean hasPoseRepeated() {
      return oneofWearableresponseCase_ == 3;
    }
    /**
     * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
     */
    public pb_wearable.Wearable.WearableResponse.PoseRepeated getPoseRepeated() {
      if (oneofWearableresponseCase_ == 3) {
         return (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_;
      }
      return pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
    }
    /**
     * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
     */
    public pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder getPoseRepeatedOrBuilder() {
      if (oneofWearableresponseCase_ == 3) {
         return (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_;
      }
      return pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
    }

    public static final int REGION_FIELD_NUMBER = 4;
    /**
     * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
     *
     * <pre>
     * Infrequent responses should come last
     * </pre>
     */
    public boolean hasRegion() {
      return oneofWearableresponseCase_ == 4;
    }
    /**
     * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
     *
     * <pre>
     * Infrequent responses should come last
     * </pre>
     */
    public pb_wearable.Wearable.WearableResponse.Region getRegion() {
      if (oneofWearableresponseCase_ == 4) {
         return (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_;
      }
      return pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
    }
    /**
     * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
     *
     * <pre>
     * Infrequent responses should come last
     * </pre>
     */
    public pb_wearable.Wearable.WearableResponse.RegionOrBuilder getRegionOrBuilder() {
      if (oneofWearableresponseCase_ == 4) {
         return (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_;
      }
      return pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
    }

    private void initFields() {
      type_ = pb_wearable.Wearable.WearableResponse.WearableResponseType.PERIODIC_STATUS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPeriodicStatus()) {
        if (!getPeriodicStatus().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPoseRepeated()) {
        if (!getPoseRepeated().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRegion()) {
        if (!getRegion().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (oneofWearableresponseCase_ == 2) {
        output.writeMessage(2, (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_);
      }
      if (oneofWearableresponseCase_ == 3) {
        output.writeMessage(3, (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_);
      }
      if (oneofWearableresponseCase_ == 4) {
        output.writeMessage(4, (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (oneofWearableresponseCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_);
      }
      if (oneofWearableresponseCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_);
      }
      if (oneofWearableresponseCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pb_wearable.Wearable.WearableResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pb_wearable.Wearable.WearableResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb_wearable.Wearable.WearableResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pb_wearable.Wearable.WearableResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb_wearable.WearableResponse}
     *
     * <pre>
     * ****************************************
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb_wearable.WearableResponse)
        pb_wearable.Wearable.WearableResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb_wearable.Wearable.WearableResponse.class, pb_wearable.Wearable.WearableResponse.Builder.class);
      }

      // Construct using pb_wearable.Wearable.WearableResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = pb_wearable.Wearable.WearableResponse.WearableResponseType.PERIODIC_STATUS;
        bitField0_ = (bitField0_ & ~0x00000001);
        oneofWearableresponseCase_ = 0;
        oneofWearableresponse_ = null;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pb_wearable.Wearable.internal_static_pb_wearable_WearableResponse_descriptor;
      }

      public pb_wearable.Wearable.WearableResponse getDefaultInstanceForType() {
        return pb_wearable.Wearable.WearableResponse.getDefaultInstance();
      }

      public pb_wearable.Wearable.WearableResponse build() {
        pb_wearable.Wearable.WearableResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pb_wearable.Wearable.WearableResponse buildPartial() {
        pb_wearable.Wearable.WearableResponse result = new pb_wearable.Wearable.WearableResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (oneofWearableresponseCase_ == 2) {
          if (periodicStatusBuilder_ == null) {
            result.oneofWearableresponse_ = oneofWearableresponse_;
          } else {
            result.oneofWearableresponse_ = periodicStatusBuilder_.build();
          }
        }
        if (oneofWearableresponseCase_ == 3) {
          if (poseRepeatedBuilder_ == null) {
            result.oneofWearableresponse_ = oneofWearableresponse_;
          } else {
            result.oneofWearableresponse_ = poseRepeatedBuilder_.build();
          }
        }
        if (oneofWearableresponseCase_ == 4) {
          if (regionBuilder_ == null) {
            result.oneofWearableresponse_ = oneofWearableresponse_;
          } else {
            result.oneofWearableresponse_ = regionBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.oneofWearableresponseCase_ = oneofWearableresponseCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pb_wearable.Wearable.WearableResponse) {
          return mergeFrom((pb_wearable.Wearable.WearableResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pb_wearable.Wearable.WearableResponse other) {
        if (other == pb_wearable.Wearable.WearableResponse.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        switch (other.getOneofWearableresponseCase()) {
          case PERIODIC_STATUS: {
            mergePeriodicStatus(other.getPeriodicStatus());
            break;
          }
          case POSE_REPEATED: {
            mergePoseRepeated(other.getPoseRepeated());
            break;
          }
          case REGION: {
            mergeRegion(other.getRegion());
            break;
          }
          case ONEOFWEARABLERESPONSE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasPeriodicStatus()) {
          if (!getPeriodicStatus().isInitialized()) {
            
            return false;
          }
        }
        if (hasPoseRepeated()) {
          if (!getPoseRepeated().isInitialized()) {
            
            return false;
          }
        }
        if (hasRegion()) {
          if (!getRegion().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pb_wearable.Wearable.WearableResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pb_wearable.Wearable.WearableResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int oneofWearableresponseCase_ = 0;
      private java.lang.Object oneofWearableresponse_;
      public OneofWearableresponseCase
          getOneofWearableresponseCase() {
        return OneofWearableresponseCase.valueOf(
            oneofWearableresponseCase_);
      }

      public Builder clearOneofWearableresponse() {
        oneofWearableresponseCase_ = 0;
        oneofWearableresponse_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private pb_wearable.Wearable.WearableResponse.WearableResponseType type_ = pb_wearable.Wearable.WearableResponse.WearableResponseType.PERIODIC_STATUS;
      /**
       * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
       */
      public pb_wearable.Wearable.WearableResponse.WearableResponseType getType() {
        return type_;
      }
      /**
       * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
       */
      public Builder setType(pb_wearable.Wearable.WearableResponse.WearableResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .pb_wearable.WearableResponse.WearableResponseType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = pb_wearable.Wearable.WearableResponse.WearableResponseType.PERIODIC_STATUS;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableResponse.PeriodicStatus, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder, pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder> periodicStatusBuilder_;
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public boolean hasPeriodicStatus() {
        return oneofWearableresponseCase_ == 2;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PeriodicStatus getPeriodicStatus() {
        if (periodicStatusBuilder_ == null) {
          if (oneofWearableresponseCase_ == 2) {
            return (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_;
          }
          return pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
        } else {
          if (oneofWearableresponseCase_ == 2) {
            return periodicStatusBuilder_.getMessage();
          }
          return pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public Builder setPeriodicStatus(pb_wearable.Wearable.WearableResponse.PeriodicStatus value) {
        if (periodicStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofWearableresponse_ = value;
          onChanged();
        } else {
          periodicStatusBuilder_.setMessage(value);
        }
        oneofWearableresponseCase_ = 2;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public Builder setPeriodicStatus(
          pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder builderForValue) {
        if (periodicStatusBuilder_ == null) {
          oneofWearableresponse_ = builderForValue.build();
          onChanged();
        } else {
          periodicStatusBuilder_.setMessage(builderForValue.build());
        }
        oneofWearableresponseCase_ = 2;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public Builder mergePeriodicStatus(pb_wearable.Wearable.WearableResponse.PeriodicStatus value) {
        if (periodicStatusBuilder_ == null) {
          if (oneofWearableresponseCase_ == 2 &&
              oneofWearableresponse_ != pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance()) {
            oneofWearableresponse_ = pb_wearable.Wearable.WearableResponse.PeriodicStatus.newBuilder((pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofWearableresponse_ = value;
          }
          onChanged();
        } else {
          if (oneofWearableresponseCase_ == 2) {
            periodicStatusBuilder_.mergeFrom(value);
          }
          periodicStatusBuilder_.setMessage(value);
        }
        oneofWearableresponseCase_ = 2;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public Builder clearPeriodicStatus() {
        if (periodicStatusBuilder_ == null) {
          if (oneofWearableresponseCase_ == 2) {
            oneofWearableresponseCase_ = 0;
            oneofWearableresponse_ = null;
            onChanged();
          }
        } else {
          if (oneofWearableresponseCase_ == 2) {
            oneofWearableresponseCase_ = 0;
            oneofWearableresponse_ = null;
          }
          periodicStatusBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder getPeriodicStatusBuilder() {
        return getPeriodicStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder getPeriodicStatusOrBuilder() {
        if ((oneofWearableresponseCase_ == 2) && (periodicStatusBuilder_ != null)) {
          return periodicStatusBuilder_.getMessageOrBuilder();
        } else {
          if (oneofWearableresponseCase_ == 2) {
            return (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_;
          }
          return pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PeriodicStatus periodic_status = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableResponse.PeriodicStatus, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder, pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder> 
          getPeriodicStatusFieldBuilder() {
        if (periodicStatusBuilder_ == null) {
          if (!(oneofWearableresponseCase_ == 2)) {
            oneofWearableresponse_ = pb_wearable.Wearable.WearableResponse.PeriodicStatus.getDefaultInstance();
          }
          periodicStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb_wearable.Wearable.WearableResponse.PeriodicStatus, pb_wearable.Wearable.WearableResponse.PeriodicStatus.Builder, pb_wearable.Wearable.WearableResponse.PeriodicStatusOrBuilder>(
                  (pb_wearable.Wearable.WearableResponse.PeriodicStatus) oneofWearableresponse_,
                  getParentForChildren(),
                  isClean());
          oneofWearableresponse_ = null;
        }
        oneofWearableresponseCase_ = 2;
        return periodicStatusBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableResponse.PoseRepeated, pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder, pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder> poseRepeatedBuilder_;
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public boolean hasPoseRepeated() {
        return oneofWearableresponseCase_ == 3;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PoseRepeated getPoseRepeated() {
        if (poseRepeatedBuilder_ == null) {
          if (oneofWearableresponseCase_ == 3) {
            return (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_;
          }
          return pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
        } else {
          if (oneofWearableresponseCase_ == 3) {
            return poseRepeatedBuilder_.getMessage();
          }
          return pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public Builder setPoseRepeated(pb_wearable.Wearable.WearableResponse.PoseRepeated value) {
        if (poseRepeatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofWearableresponse_ = value;
          onChanged();
        } else {
          poseRepeatedBuilder_.setMessage(value);
        }
        oneofWearableresponseCase_ = 3;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public Builder setPoseRepeated(
          pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder builderForValue) {
        if (poseRepeatedBuilder_ == null) {
          oneofWearableresponse_ = builderForValue.build();
          onChanged();
        } else {
          poseRepeatedBuilder_.setMessage(builderForValue.build());
        }
        oneofWearableresponseCase_ = 3;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public Builder mergePoseRepeated(pb_wearable.Wearable.WearableResponse.PoseRepeated value) {
        if (poseRepeatedBuilder_ == null) {
          if (oneofWearableresponseCase_ == 3 &&
              oneofWearableresponse_ != pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance()) {
            oneofWearableresponse_ = pb_wearable.Wearable.WearableResponse.PoseRepeated.newBuilder((pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofWearableresponse_ = value;
          }
          onChanged();
        } else {
          if (oneofWearableresponseCase_ == 3) {
            poseRepeatedBuilder_.mergeFrom(value);
          }
          poseRepeatedBuilder_.setMessage(value);
        }
        oneofWearableresponseCase_ = 3;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public Builder clearPoseRepeated() {
        if (poseRepeatedBuilder_ == null) {
          if (oneofWearableresponseCase_ == 3) {
            oneofWearableresponseCase_ = 0;
            oneofWearableresponse_ = null;
            onChanged();
          }
        } else {
          if (oneofWearableresponseCase_ == 3) {
            oneofWearableresponseCase_ = 0;
            oneofWearableresponse_ = null;
          }
          poseRepeatedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder getPoseRepeatedBuilder() {
        return getPoseRepeatedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      public pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder getPoseRepeatedOrBuilder() {
        if ((oneofWearableresponseCase_ == 3) && (poseRepeatedBuilder_ != null)) {
          return poseRepeatedBuilder_.getMessageOrBuilder();
        } else {
          if (oneofWearableresponseCase_ == 3) {
            return (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_;
          }
          return pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.PoseRepeated pose_repeated = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableResponse.PoseRepeated, pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder, pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder> 
          getPoseRepeatedFieldBuilder() {
        if (poseRepeatedBuilder_ == null) {
          if (!(oneofWearableresponseCase_ == 3)) {
            oneofWearableresponse_ = pb_wearable.Wearable.WearableResponse.PoseRepeated.getDefaultInstance();
          }
          poseRepeatedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb_wearable.Wearable.WearableResponse.PoseRepeated, pb_wearable.Wearable.WearableResponse.PoseRepeated.Builder, pb_wearable.Wearable.WearableResponse.PoseRepeatedOrBuilder>(
                  (pb_wearable.Wearable.WearableResponse.PoseRepeated) oneofWearableresponse_,
                  getParentForChildren(),
                  isClean());
          oneofWearableresponse_ = null;
        }
        oneofWearableresponseCase_ = 3;
        return poseRepeatedBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableResponse.Region, pb_wearable.Wearable.WearableResponse.Region.Builder, pb_wearable.Wearable.WearableResponse.RegionOrBuilder> regionBuilder_;
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public boolean hasRegion() {
        return oneofWearableresponseCase_ == 4;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public pb_wearable.Wearable.WearableResponse.Region getRegion() {
        if (regionBuilder_ == null) {
          if (oneofWearableresponseCase_ == 4) {
            return (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_;
          }
          return pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
        } else {
          if (oneofWearableresponseCase_ == 4) {
            return regionBuilder_.getMessage();
          }
          return pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public Builder setRegion(pb_wearable.Wearable.WearableResponse.Region value) {
        if (regionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofWearableresponse_ = value;
          onChanged();
        } else {
          regionBuilder_.setMessage(value);
        }
        oneofWearableresponseCase_ = 4;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public Builder setRegion(
          pb_wearable.Wearable.WearableResponse.Region.Builder builderForValue) {
        if (regionBuilder_ == null) {
          oneofWearableresponse_ = builderForValue.build();
          onChanged();
        } else {
          regionBuilder_.setMessage(builderForValue.build());
        }
        oneofWearableresponseCase_ = 4;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public Builder mergeRegion(pb_wearable.Wearable.WearableResponse.Region value) {
        if (regionBuilder_ == null) {
          if (oneofWearableresponseCase_ == 4 &&
              oneofWearableresponse_ != pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance()) {
            oneofWearableresponse_ = pb_wearable.Wearable.WearableResponse.Region.newBuilder((pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofWearableresponse_ = value;
          }
          onChanged();
        } else {
          if (oneofWearableresponseCase_ == 4) {
            regionBuilder_.mergeFrom(value);
          }
          regionBuilder_.setMessage(value);
        }
        oneofWearableresponseCase_ = 4;
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public Builder clearRegion() {
        if (regionBuilder_ == null) {
          if (oneofWearableresponseCase_ == 4) {
            oneofWearableresponseCase_ = 0;
            oneofWearableresponse_ = null;
            onChanged();
          }
        } else {
          if (oneofWearableresponseCase_ == 4) {
            oneofWearableresponseCase_ = 0;
            oneofWearableresponse_ = null;
          }
          regionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public pb_wearable.Wearable.WearableResponse.Region.Builder getRegionBuilder() {
        return getRegionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      public pb_wearable.Wearable.WearableResponse.RegionOrBuilder getRegionOrBuilder() {
        if ((oneofWearableresponseCase_ == 4) && (regionBuilder_ != null)) {
          return regionBuilder_.getMessageOrBuilder();
        } else {
          if (oneofWearableresponseCase_ == 4) {
            return (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_;
          }
          return pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
        }
      }
      /**
       * <code>optional .pb_wearable.WearableResponse.Region region = 4;</code>
       *
       * <pre>
       * Infrequent responses should come last
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb_wearable.Wearable.WearableResponse.Region, pb_wearable.Wearable.WearableResponse.Region.Builder, pb_wearable.Wearable.WearableResponse.RegionOrBuilder> 
          getRegionFieldBuilder() {
        if (regionBuilder_ == null) {
          if (!(oneofWearableresponseCase_ == 4)) {
            oneofWearableresponse_ = pb_wearable.Wearable.WearableResponse.Region.getDefaultInstance();
          }
          regionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb_wearable.Wearable.WearableResponse.Region, pb_wearable.Wearable.WearableResponse.Region.Builder, pb_wearable.Wearable.WearableResponse.RegionOrBuilder>(
                  (pb_wearable.Wearable.WearableResponse.Region) oneofWearableresponse_,
                  getParentForChildren(),
                  isClean());
          oneofWearableresponse_ = null;
        }
        oneofWearableresponseCase_ = 4;
        return regionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pb_wearable.WearableResponse)
    }

    static {
      defaultInstance = new WearableResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pb_wearable.WearableResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_GetPoseRepeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_SetPoseRepeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableResponse_PoseRepeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableResponse_Region_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableResponse_Region_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableResponse_PeriodicStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016wearable.proto\022\013pb_wearable\"\314\007\n\017Wearab" +
      "leRequest\022>\n\004type\030\001 \002(\01620.pb_wearable.We" +
      "arableRequest.WearableRequestType\022I\n\021set" +
      "_pose_repeated\030\002 \001(\0132,.pb_wearable.Weara" +
      "bleRequest.SetPoseRepeatedH\000\022Z\n\032set_pose" +
      "_waypoint_repeated\030\003 \001(\01324.pb_wearable.W" +
      "earableRequest.SetPoseWaypointRepeatedH\000" +
      "\022I\n\021get_pose_repeated\030\004 \001(\0132,.pb_wearabl" +
      "e.WearableRequest.GetPoseRepeatedH\000\032t\n\017G" +
      "etPoseRepeated\022F\n\010get_pose\030\001 \003(\01324.pb_we",
      "arable.WearableRequest.GetPoseRepeated.G" +
      "etPose\032\031\n\007GetPose\022\016\n\006uav_id\030\001 \002(\005\032\242\001\n\017Se" +
      "tPoseRepeated\022F\n\010set_pose\030\001 \003(\01324.pb_wea" +
      "rable.WearableRequest.SetPoseRepeated.Se" +
      "tPose\032G\n\007SetPose\022\016\n\006uav_id\030\001 \002(\005\022\t\n\001x\030\002 " +
      "\001(\001\022\t\n\001y\030\003 \001(\001\022\t\n\001z\030\004 \001(\001\022\013\n\003yaw\030\005 \001(\001\032\335" +
      "\001\n\027SetPoseWaypointRepeated\022\016\n\006uav_id\030\001 \002" +
      "(\005\022_\n\021set_pose_waypoint\030\002 \003(\0132D.pb_weara" +
      "ble.WearableRequest.SetPoseWaypointRepea" +
      "ted.SetPoseWaypoint\032Q\n\017SetPoseWaypoint\022\t",
      "\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\t\n\001z\030\003 \002(\001\022\013\n\003yaw\030\004" +
      " \001(\001\022\020\n\010delay_ms\030\005 \001(\005\"s\n\023WearableReques" +
      "tType\022\016\n\nGET_REGION\020\000\022\025\n\021GET_POSE_REPEAT" +
      "ED\020\001\022\025\n\021SET_POSE_REPEATED\020\002\022\036\n\032SET_POSE_" +
      "WAYPOINT_REPEATED\020\003B\027\n\025oneof_wearablereq" +
      "uest\"\352\005\n\020WearableResponse\022@\n\004type\030\001 \002(\0162" +
      "2.pb_wearable.WearableResponse.WearableR" +
      "esponseType\022G\n\017periodic_status\030\002 \001(\0132,.p" +
      "b_wearable.WearableResponse.PeriodicStat" +
      "usH\000\022C\n\rpose_repeated\030\003 \001(\0132*.pb_wearabl",
      "e.WearableResponse.PoseRepeatedH\000\0226\n\006reg" +
      "ion\030\004 \001(\0132$.pb_wearable.WearableResponse" +
      ".RegionH\000\032\223\001\n\014PoseRepeated\022=\n\004pose\030\001 \003(\013" +
      "2/.pb_wearable.WearableResponse.PoseRepe" +
      "ated.Pose\032D\n\004Pose\022\016\n\006uav_id\030\001 \002(\005\022\t\n\001x\030\002" +
      " \002(\001\022\t\n\001y\030\003 \002(\001\022\t\n\001z\030\004 \002(\001\022\013\n\003yaw\030\005 \001(\001\032" +
      "8\n\006Region\022\n\n\002x0\030\001 \002(\001\022\n\n\002y0\030\002 \002(\001\022\n\n\002x1\030" +
      "\003 \002(\001\022\n\n\002y1\030\004 \002(\001\032\227\001\n\016PeriodicStatus\022?\n\004" +
      "pose\030\001 \003(\01321.pb_wearable.WearableRespons" +
      "e.PeriodicStatus.Pose\032D\n\004Pose\022\016\n\006uav_id\030",
      "\001 \002(\005\022\t\n\001x\030\002 \002(\001\022\t\n\001y\030\003 \002(\001\022\t\n\001z\030\004 \002(\001\022\013" +
      "\n\003yaw\030\005 \001(\001\"J\n\024WearableResponseType\022\023\n\017P" +
      "ERIODIC_STATUS\020\000\022\021\n\rPOSE_REPEATED\020\001\022\n\n\006R" +
      "EGION\020\002B\030\n\026oneof_wearableresponse"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_pb_wearable_WearableRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_wearable_WearableRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_descriptor,
        new java.lang.String[] { "Type", "SetPoseRepeated", "SetPoseWaypointRepeated", "GetPoseRepeated", "OneofWearablerequest", });
    internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor =
      internal_static_pb_wearable_WearableRequest_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableRequest_GetPoseRepeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor,
        new java.lang.String[] { "GetPose", });
    internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_descriptor =
      internal_static_pb_wearable_WearableRequest_GetPoseRepeated_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_GetPoseRepeated_GetPose_descriptor,
        new java.lang.String[] { "UavId", });
    internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor =
      internal_static_pb_wearable_WearableRequest_descriptor.getNestedTypes().get(1);
    internal_static_pb_wearable_WearableRequest_SetPoseRepeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor,
        new java.lang.String[] { "SetPose", });
    internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_descriptor =
      internal_static_pb_wearable_WearableRequest_SetPoseRepeated_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_SetPoseRepeated_SetPose_descriptor,
        new java.lang.String[] { "UavId", "X", "Y", "Z", "Yaw", });
    internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor =
      internal_static_pb_wearable_WearableRequest_descriptor.getNestedTypes().get(2);
    internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor,
        new java.lang.String[] { "UavId", "SetPoseWaypoint", });
    internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_descriptor =
      internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableRequest_SetPoseWaypointRepeated_SetPoseWaypoint_descriptor,
        new java.lang.String[] { "X", "Y", "Z", "Yaw", "DelayMs", });
    internal_static_pb_wearable_WearableResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pb_wearable_WearableResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableResponse_descriptor,
        new java.lang.String[] { "Type", "PeriodicStatus", "PoseRepeated", "Region", "OneofWearableresponse", });
    internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor =
      internal_static_pb_wearable_WearableResponse_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableResponse_PoseRepeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor,
        new java.lang.String[] { "Pose", });
    internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_descriptor =
      internal_static_pb_wearable_WearableResponse_PoseRepeated_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableResponse_PoseRepeated_Pose_descriptor,
        new java.lang.String[] { "UavId", "X", "Y", "Z", "Yaw", });
    internal_static_pb_wearable_WearableResponse_Region_descriptor =
      internal_static_pb_wearable_WearableResponse_descriptor.getNestedTypes().get(1);
    internal_static_pb_wearable_WearableResponse_Region_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableResponse_Region_descriptor,
        new java.lang.String[] { "X0", "Y0", "X1", "Y1", });
    internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor =
      internal_static_pb_wearable_WearableResponse_descriptor.getNestedTypes().get(2);
    internal_static_pb_wearable_WearableResponse_PeriodicStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor,
        new java.lang.String[] { "Pose", });
    internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_descriptor =
      internal_static_pb_wearable_WearableResponse_PeriodicStatus_descriptor.getNestedTypes().get(0);
    internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_wearable_WearableResponse_PeriodicStatus_Pose_descriptor,
        new java.lang.String[] { "UavId", "X", "Y", "Z", "Yaw", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
